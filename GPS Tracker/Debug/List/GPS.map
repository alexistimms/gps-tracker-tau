################################################################################
#                                                                              #
#      IAR Universal Linker V5.0.2.5/W32                                       #
#                                                                              #
#           Link time     =  31/Mar/2012  14:30:41                             #
#           Target CPU    =  MSP430                                            #
#           List file     =  "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\List\GPS.map"                                   #
#           Output file 1 =  "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\Exe\GPS.d43"                                    #
#                            Format: debug                                     #
#                            UBROF version 10.0.3                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\Obj\diskio.r43"                                 #
#                            "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\Obj\ff.r43"                                     #
#                            "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\Obj\gps.r43"                                    #
#                            "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\Obj\main.r43"                                   #
#                            "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\Obj\mmc.r43"                                    #
#                            "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\Obj\sd_spi.r43"                                 #
#                            "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\Obj\timer.r43"                                  #
#                            "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\Obj\uart.r43"                                   #
#                            -o                                                #
#                            "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\Exe\GPS.d43"                                    #
#                            -l                                                #
#                            "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\List\GPS.map"                                   #
#                            -xmsno                                            #
#                            "-IC:\Program Files\IAR Systems\Embedded Workbenc #
#                            h 6.0_0\430\LIB\"                                 #
#                            -f                                                #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            6.0_0\430\CONFIG\lnk430F2618.xcl"                 #
#                            (-cmsp430 -QCODE_I=CODE_ID                        #
#                            -Z(DATA)DATA16_I,DATA16_Z,DATA16_N,DATA16_HEAP+_D #
#                            ATA16_HEAP_SIZE=1100-30FF                         #
#                            -Z(DATA)CODE_I                                    #
#                            -Z(DATA)DATA20_I,DATA20_Z,DATA20_N,DATA20_HEAP+_D #
#                            ATA20_HEAP_SIZE                                   #
#                            -Z(DATA)CSTACK+_STACK_SIZE#                       #
#                            -Z(CONST)INFO=1000-10FF                           #
#                            -Z(CONST)INFOA=10C0-10FF                          #
#                            -Z(CONST)INFOB=1080-10BF                          #
#                            -Z(CONST)INFOC=1040-107F                          #
#                            -Z(CONST)INFOD=1000-103F                          #
#                            -Z(CODE)CSTART,ISR_CODE=3100-FFBF                 #
#                            -Z(CONST)DATA16_C,DATA16_ID,DIFUNCT,CHECKSUM=3100 #
#                            -FFBF                                             #
#                            -P(CODE)CODE=3100-FFBF,10000-1FFFF                #
#                            -Z(CODE)CODE_ID                                   #
#                            -Z(CONST)DATA20_C,DATA20_ID=3100-FFBF,10000-1FFFF #
#                            -Z(CODE)INTVEC=FFC0-FFFF                          #
#                            -Z(CODE)RESET=FFFE-FFFF) -f                       #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            6.0_0\430\config\multiplier.xcl"                  #
#                            (-e?Mul8Hw=?Mul8 -e?Mul16Hw=?Mul16                #
#                            -e?Mul16to32uHw=?Mul16to32u                       #
#                            -e?Mul16to32sHw=?Mul16to32s -e?Mul32Hw=?Mul32     #
#                            -e_Mul64iHw=_Mul64i                               #
#                            -e_Mul32u32uto64iHw=_Mul32u32uto64i               #
#                            -e?Mul32fHw=_Mul32f -e_Mul64fHwPtr=_Mul64fPtr)    #
#                            -D_STACK_SIZE=400 -rt                             #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            6.0_0\430\LIB\DLIB\dl430xsfn.r43"                 #
#                            -e_PrintfLarge=_Printf -e_ScanfLarge=_Scanf       #
#                            -D_DATA16_HEAP_SIZE=50 -s __program_start         #
#                            -D_DATA20_HEAP_SIZE=50                            #
#                                                                              #
#                           Copyright (C) 1987-2010 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at :           3100  Relocatable, from module : ?cstart




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __SystemLibrary            = DLib
  __core                     = 430X
  __data_model               = small
  __dlib_file_descriptor     = 0
  __dlib_full_locale_support = 0
  __double_size              = 32
  __pic                      = no
  __reg_r4                   = free
  __reg_r5                   = free
  __rt_version               = 3



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _DATA20_HEAP_SIZE       0050 
           _DATA16_HEAP_SIZE       0050 
           _STACK_SIZE             0400 
    *************************************************************************

  FILE NAME : C:\Users\owner\Code\TAU project\GPS Tracker\Debug\Obj\diskio.r43
  PROGRAM MODULE, NAME : diskio

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0019 - 0019 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   mmcGoIdle (mmc)
                                                   mmcInit (mmc)
                                                   mmcReadBlock (mmc)
                                                   mmcSetBlockLength (mmc)
                                                   mmcWriteBlock (mmc)
                                                   sd_hw_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P3OUT                   0019 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 001A - 001A (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   sd_hw_init
                                                   sd_spi_init (sd_spi)
                                                   uart_init (uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P3DIR                   001A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7224 - 722F (0xc bytes), align: 1
  Segment part 19.            Intra module refs:   disk_initialize
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sd_hw_init              7224 
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 70F6 - 7109 (0x14 bytes), align: 1
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           disk_initialize         70F6            chk_mounted (ff)
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7272 - 7275 (0x4 bytes), align: 1
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           disk_status             7272            chk_mounted (ff)
                                                   validate (ff)
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 69AA - 69FD (0x54 bytes), align: 1
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           disk_read               69AA            check_fs (ff)
                                                   chk_mounted (ff)
                                                   f_write (ff)
                                                   move_window (ff)
               calls direct
               CSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 68A4 - 68FD (0x5a bytes), align: 1
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           disk_write              68A4            f_sync (ff)
                                                   f_write (ff)
                                                   move_window (ff)
                                                   sync (ff)
               calls direct
               CSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 727A - 727D (0x4 bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           disk_ioctl              727A            sync (ff)
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 1100 - 1103 (0x4 bytes), align: 1
  Segment part 4.             Intra module refs:   get_fattime
                                                   update_fattime
           LOCAL                   ADDRESS         
           =====                   =======         
           fat_year                1100 
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 1104 - 1107 (0x4 bytes), align: 1
  Segment part 6.             Intra module refs:   get_fattime
                                                   update_fattime
           LOCAL                   ADDRESS         
           =====                   =======         
           fat_month               1104 
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 1108 - 110B (0x4 bytes), align: 1
  Segment part 8.             Intra module refs:   get_fattime
                                                   update_fattime
           LOCAL                   ADDRESS         
           =====                   =======         
           fat_day                 1108 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1114 - 1117 (0x4 bytes), align: 1
  Segment part 10.            Intra module refs:   get_fattime
                                                   update_fattime
           LOCAL                   ADDRESS         
           =====                   =======         
           fat_hour                1114 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1118 - 111B (0x4 bytes), align: 1
  Segment part 11.            Intra module refs:   get_fattime
                                                   update_fattime
           LOCAL                   ADDRESS         
           =====                   =======         
           fat_minutes             1118 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 111C - 111F (0x4 bytes), align: 1
  Segment part 12.            Intra module refs:   get_fattime
                                                   update_fattime
           LOCAL                   ADDRESS         
           =====                   =======         
           fat_seconds             111C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6542 - 65BD (0x7c bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_fattime             6542            f_open (ff)
                                                   f_sync (ff)
               CSTACK = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 66B6 - 672B (0x76 bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           update_fattime          66B6            main (main)
               CSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 34F2 - 34F5 (0x4 bytes), align: 1
  Segment part 5.             Intra module refs:   fat_year
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 34F6 - 34F9 (0x4 bytes), align: 1
  Segment part 7.             Intra module refs:   fat_month
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 34FA - 34FD (0x4 bytes), align: 1
  Segment part 9.             Intra module refs:   fat_day

    *************************************************************************

  FILE NAME : C:\Users\owner\Code\TAU project\GPS Tracker\Debug\Obj\ff.r43
  PROGRAM MODULE, NAME : ff

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 1120 - 1121 (0x2 bytes), align: 1
  Segment part 6.             Intra module refs:   chk_mounted
                                                   f_mount
           LOCAL                   ADDRESS         
           =====                   =======         
           FatFs                   1120 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1122 - 1123 (0x2 bytes), align: 1
  Segment part 7.             Intra module refs:   chk_mounted
           LOCAL                   ADDRESS         
           =====                   =======         
           Fsid                    1122 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 70E0 - 70F5 (0x16 bytes), align: 1
  Segment part 11.            Intra module refs:   dir_register
                                                   f_write
           LOCAL                   ADDRESS         
           =====                   =======         
           mem_cpy                 70E0 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 711E - 7131 (0x14 bytes), align: 1
  Segment part 12.            Intra module refs:   create_name
                                                   dir_next
                                                   dir_register
                                                   sync
           LOCAL                   ADDRESS         
           =====                   =======         
           mem_set                 711E 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6F1A - 6F3F (0x26 bytes), align: 1
  Segment part 24.            Intra module refs:   dir_find
           LOCAL                   ADDRESS         
           =====                   =======         
           mem_cmp                 6F1A 
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6FFC - 7013 (0x18 bytes), align: 1
  Segment part 26.            Intra module refs:   create_name
           LOCAL                   ADDRESS         
           =====                   =======         
           chk_chr                 6FFC 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 5FB4 - 606B (0xb8 bytes), align: 1
  Segment part 14.            Intra module refs:   dir_find
                                                   dir_next
                                                   dir_register
                                                   f_open
                                                   f_sync
                                                   get_fat
                                                   put_fat
                                                   sync
           LOCAL                   ADDRESS         
           =====                   =======         
           move_window             5FB4 
               calls direct
               CSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 5DCE - 5EC5 (0xf8 bytes), align: 1
  Segment part 15.            Intra module refs:   f_sync
           LOCAL                   ADDRESS         
           =====                   =======         
           sync                    5DCE 
               calls direct
               CSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6BCC - 6C0F (0x44 bytes), align: 1
  Segment part 16.            Intra module refs:   dir_next
                                                   dir_sdi
                                                   f_write
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clust2sect              6BCC 
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 527E - 540D (0x190 bytes), align: 1
  Segment part 17.            Intra module refs:   create_chain
                                                   dir_next
                                                   dir_sdi
                                                   remove_chain
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_fat                 527E 
               calls direct
               CSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 4A20 - 4BE1 (0x1c2 bytes), align: 1
  Segment part 20.            Intra module refs:   create_chain
                                                   remove_chain
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           put_fat                 4A20 
               calls direct
               CSTACK = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6278 - 6313 (0x9c bytes), align: 1
  Segment part 34.            Intra module refs:   f_open
           LOCAL                   ADDRESS         
           =====                   =======         
           remove_chain            6278 
               calls direct
               CSTACK = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 5A8A - 5BAD (0x124 bytes), align: 1
  Segment part 21.            Intra module refs:   dir_next
                                                   f_write
           LOCAL                   ADDRESS         
           =====                   =======         
           create_chain            5A8A 
               calls direct
               CSTACK = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 5CC8 - 5DCD (0x106 bytes), align: 1
  Segment part 18.            Intra module refs:   dir_find
                                                   dir_register
                                                   follow_path
           LOCAL                   ADDRESS         
           =====                   =======         
           dir_sdi                 5CC8 
               calls direct
               CSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 50EE - 527D (0x190 bytes), align: 1
  Segment part 22.            Intra module refs:   dir_find
                                                   dir_register
           LOCAL                   ADDRESS         
           =====                   =======         
           dir_next                50EE 
               calls direct
               CSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 672C - 678D (0x62 bytes), align: 1
  Segment part 25.            Intra module refs:   follow_path
           LOCAL                   ADDRESS         
           =====                   =======         
           dir_find                672C 
               calls direct
               CSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 643E - 64C3 (0x86 bytes), align: 1
  Segment part 23.            Intra module refs:   f_open
           LOCAL                   ADDRESS         
           =====                   =======         
           dir_register            643E 
               calls direct
               CSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 5BAE - 5CC7 (0x11a bytes), align: 1
  Segment part 27.            Intra module refs:   follow_path
           LOCAL                   ADDRESS         
           =====                   =======         
           create_name             5BAE 
               calls direct
               CSTACK = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 31B6 - 31C4 (0xf bytes), align: 0
  Segment part 2.             Intra module refs:   create_name
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 31C5 - 3244 (0x80 bytes), align: 0
  Segment part 8.             Intra module refs:   create_name
           LOCAL                   ADDRESS         
           =====                   =======         
           create_name::excvt      31C5 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 606C - 611F (0xb4 bytes), align: 1
  Segment part 28.            Intra module refs:   f_open
           LOCAL                   ADDRESS         
           =====                   =======         
           follow_path             606C 
               calls direct
               CSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6314 - 63AB (0x98 bytes), align: 1
  Segment part 29.            Intra module refs:   chk_mounted
           LOCAL                   ADDRESS         
           =====                   =======         
           check_fs                6314 
               calls direct
               CSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 3AE2 - 4085 (0x5a4 bytes), align: 1
  Segment part 30.            Intra module refs:   f_open
           LOCAL                   ADDRESS         
           =====                   =======         
           chk_mounted             3AE2 
               calls direct
               CSTACK = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6EC4 - 6EEF (0x2c bytes), align: 1
  Segment part 38.            Intra module refs:   f_sync
                                                   f_write
           LOCAL                   ADDRESS         
           =====                   =======         
           validate                6EC4 
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6E10 - 6E3D (0x2e bytes), align: 1
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           f_mount                 6E10            main (main)
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 4804 - 4A1F (0x21c bytes), align: 1
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           f_open                  4804            main (main)
               calls direct
               CSTACK = 00000000 ( 00000038 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 4086 - 435B (0x2d6 bytes), align: 1
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           f_write                 4086            main (main)
               calls direct
               CSTACK = 00000000 ( 00000016 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 5EC6 - 5FB3 (0xee bytes), align: 1
  Segment part 46.            Intra module refs:   f_close
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           f_sync                  5EC6 
               calls direct
               CSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 709E - 70B3 (0x16 bytes), align: 1
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           f_close                 709E            main (main)
               calls direct
               CSTACK = 00000000 ( 00000006 )

    *************************************************************************

  FILE NAME : C:\Users\owner\Code\TAU project\GPS Tracker\Debug\Obj\gps.r43
  PROGRAM MODULE, NAME : gps

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 001D - 001D (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   gps_init
                                                   hw_setup (main)
                                                   led_setup (main)
                                                   main (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P4OUT                   001D 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 001E - 001E (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   gps_init
                                                   led_setup (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P4DIR                   001E 
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 3245 - 324C (0x8 bytes), align: 0
  Segment part 4.             Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 324D - 3300 (0xb4 bytes), align: 0
  Segment part 5.             Intra module refs:   gps_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gpsInitStrs             324D 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 65BE - 6639 (0x7c bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gps_init                65BE            main (main)
               calls direct
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 110C - 110D (0x2 bytes), align: 1
  Segment part 6.             Intra module refs:   parse_line
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gps_line_header         110C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 540E - 5581 (0x174 bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parse_line              540E            main (main)
               calls direct
               CSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 61D2 - 6277 (0xa6 bytes), align: 1
  Segment part 10.            Intra module refs:   parse_line
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parse_time              61D2 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 4DA0 - 4F4F (0x1b0 bytes), align: 1
  Segment part 9.             Intra module refs:   parse_line
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parse_coord             4DA0 
               calls direct
               CSTACK = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6120 - 61D1 (0xb2 bytes), align: 1
  Segment part 8.             Intra module refs:   parse_line
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parse_date              6120 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 34FE - 34FF (0x2 bytes), align: 1
  Segment part 7.             Intra module refs:   gps_line_header

    *************************************************************************

  FILE NAME : C:\Users\owner\Code\TAU project\GPS Tracker\Debug\Obj\main.r43
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0056 - 0056 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   clocks_setup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DCOCTL                  0056 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0057 - 0057 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   clocks_setup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BCSCTL1                 0057 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0058 - 0058 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   clocks_setup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BCSCTL2                 0058 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0053 - 0053 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   clocks_setup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BCSCTL3                 0053 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0020 - 0020 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1IN                    0020 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0021 - 0021 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   record_button_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1OUT                   0021 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0023 - 0023 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   ButtonISR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1IFG                   0023 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0024 - 0024 (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   record_button_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1IES                   0024 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0025 - 0025 (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   record_button_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1IE                    0025 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0027 - 0027 (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   record_button_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1REN                   0027 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0120 - 0121 (0x2 bytes), align: 0
  Segment part 13. ROOT.      Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDTCTL                  0120 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 157A - 15F9 (0x80 bytes), align: 0
  Segment part 20.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           line                    157A 
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 110E - 110F (0x2 bytes), align: 1
  Segment part 21.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KML_Header              110E 
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 1110 - 1111 (0x2 bytes), align: 1
  Segment part 23.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KML_Footer              1110 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1124 - 1343 (0x220 bytes), align: 1
  Segment part 26.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Fil                     1124 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1344 - 1571 (0x22e bytes), align: 1
  Segment part 28.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Fatfs                   1344 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 15FA - 15FA (0x1 bytes), align: 0
  Segment part 29.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           result                  15FA 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 4BE2 - 4D9F (0x1be bytes), align: 1
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    4BE2            Segment part 19 (?cstart)
               calls direct
               CSTACK = 00000000 ( 0000002C )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7014 - 702B (0x18 bytes), align: 1
  Segment part 36.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hw_setup                7014 
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7252 - 725B (0xa bytes), align: 1
  Segment part 35.            Intra module refs:   hw_setup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_setup               7252 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6D7E - 6DAF (0x32 bytes), align: 1
  Segment part 34.            Intra module refs:   hw_setup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clocks_setup            6D7E 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7282 - 7283 (0x2 bytes), align: 1
  Segment part 33.            Intra module refs:   hw_setup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timers_setup            7282 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7044 - 705B (0x18 bytes), align: 1
  Segment part 32.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spool_coords            7044 
               calls direct
               CSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6FE2 - 6FFB (0x1a bytes), align: 1
  Segment part 31.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           record_button_init      6FE2 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 3128 - 3135 (0xe bytes), align: 1
  Segment part 30.            Intra module refs:   ButtonISR::??INTVEC 36
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ButtonISR               3128 
               interrupt function
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FFC0 - FFE5 (0x26 bytes), align: 1
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ButtonISR::??INTVEC 36
                                   FFE4 
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 3500 - 3501 (0x2 bytes), align: 1
  Segment part 22.            Intra module refs:   KML_Header
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 3502 - 3503 (0x2 bytes), align: 1
  Segment part 24.            Intra module refs:   KML_Footer
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 3301 - 3477 (0x177 bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 22
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 3478 - 34B0 (0x39 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 24
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 34B1 - 34C5 (0x15 bytes), align: 0
  Segment part 18.            Intra module refs:   main
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 34C6 - 34D8 (0x13 bytes), align: 0
  Segment part 19.            Intra module refs:   spool_coords

    *************************************************************************

  FILE NAME : C:\Users\owner\Code\TAU project\GPS Tracker\Debug\Obj\mmc.r43
  PROGRAM MODULE, NAME : mmc

  SEGMENTS IN THE MODULE
  ======================
DATA16_I
  Relative segment, address: 1112 - 1112 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   mmcCheckBusy
                                                   mmcGetResponse
                                                   mmcGetXXResponse
                                                   mmcGoIdle
                                                   mmcInit
                                                   mmcReadBlock
                                                   mmcSetBlockLength
                                                   mmcWriteBlock
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DUMMY_CHAR              1112 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6F40 - 6F61 (0x22 bytes), align: 1
  Segment part 12.            Intra module refs:   mmcSetBlockLength
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mmcInit                 6F40            disk_initialize (diskio)
               calls direct
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 67EC - 6849 (0x5e bytes), align: 1
  Segment part 11.            Intra module refs:   mmcInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mmcGoIdle               67EC 
               calls direct
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6F84 - 6FA5 (0x22 bytes), align: 1
  Segment part 7.             Intra module refs:   mmcGoIdle
                                                   mmcReadBlock
                                                   mmcSetBlockLength
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mmcGetResponse          6F84 
               calls direct
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6FA6 - 6FC5 (0x20 bytes), align: 1
  Segment part 9.             Intra module refs:   mmcReadBlock
                                                   mmcWriteBlock
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mmcGetXXResponse        6FA6 
               calls direct
               CSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 68FE - 6955 (0x58 bytes), align: 1
  Segment part 15.            Intra module refs:   mmcWriteBlock
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mmcCheckBusy            68FE 
               calls direct
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 663A - 66B5 (0x7c bytes), align: 1
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mmcReadBlock            663A            disk_read (diskio)
               calls direct
               CSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 64C4 - 6541 (0x7e bytes), align: 1
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mmcWriteBlock           64C4            disk_write (diskio)
               calls direct
               CSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6AEC - 6B37 (0x4c bytes), align: 1
  Segment part 10.            Intra module refs:   mmcGoIdle
                                                   mmcReadBlock
                                                   mmcSetBlockLength
                                                   mmcWriteBlock
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mmcSendCmd              6AEC 
               calls direct
               CSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6B84 - 6BCB (0x48 bytes), align: 1
  Segment part 13.            Intra module refs:   mmcReadBlock
                                                   mmcWriteBlock
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mmcSetBlockLength       6B84 
               calls direct
               CSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 3504 - 3504 (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   DUMMY_CHAR

    *************************************************************************

  FILE NAME : C:\Users\owner\Code\TAU project\GPS Tracker\Debug\Obj\sd_spi.r43
  PROGRAM MODULE, NAME : sd_spi

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0003 - 0003 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   sd_spi_read
                                                   sd_spi_write
                                                   sd_spi_write_byte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IFG2                    0003 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 001B - 001B (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   sd_spi_init
                                                   uart_init (uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P3SEL                   001B 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0068 - 0068 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   sd_spi_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCB0CTL0                0068 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0069 - 0069 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   sd_spi_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCB0CTL1                0069 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 006A - 006A (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   sd_spi_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCB0BR0                 006A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 006B - 006B (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   sd_spi_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCB0BR1                 006B 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 006E - 006E (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   sd_spi_read
                                                   sd_spi_write
                                                   sd_spi_write_byte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCB0RXBUF               006E 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 006F - 006F (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   sd_spi_read
                                                   sd_spi_write
                                                   sd_spi_write_byte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCB0TXBUF               006F 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6DE0 - 6E0F (0x30 bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sd_spi_init             6DE0            sd_hw_init (diskio)
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6E98 - 6EC3 (0x2c bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sd_spi_write            6E98            mmcSendCmd (mmc)
                                                   mmcWriteBlock (mmc)
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7088 - 709D (0x16 bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sd_spi_write_byte       7088            mmcCheckBusy (mmc)
                                                   mmcGetResponse (mmc)
                                                   mmcGetXXResponse (mmc)
                                                   mmcGoIdle (mmc)
                                                   mmcInit (mmc)
                                                   mmcReadBlock (mmc)
                                                   mmcSetBlockLength (mmc)
                                                   mmcWriteBlock (mmc)
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6E3E - 6E6B (0x2e bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sd_spi_read             6E3E            mmcReadBlock (mmc)
               CSTACK = 00000000 ( 00000006 )

    *************************************************************************

  FILE NAME : C:\Users\owner\Code\TAU project\GPS Tracker\Debug\Obj\timer.r43
  PROGRAM MODULE, NAME : timer

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6CD4 - 6D11 (0x3e bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           wait                    6CD4            gps_init (gps)
               CSTACK = 00000000 ( 0000000A )

    *************************************************************************

  FILE NAME : C:\Users\owner\Code\TAU project\GPS Tracker\Debug\Obj\uart.r43
  PROGRAM MODULE, NAME : uart

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0006 - 0006 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   uart_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UC1IE                   0006 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0007 - 0007 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   uartTxISR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UC1IFG                  0007 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 00D0 - 00D0 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   uart_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1CTL0                00D0 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 00D1 - 00D1 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   uart_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1CTL1                00D1 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 00D2 - 00D2 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   uart_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1BR0                 00D2 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 00D3 - 00D3 (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   uart_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1BR1                 00D3 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 00D4 - 00D4 (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   uart_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1MCTL                00D4 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 00D5 - 00D5 (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   uartRxISR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1STAT                00D5 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 00D6 - 00D6 (0x1 bytes), align: 0
  Segment part 11. ROOT.      Intra module refs:   uartRxISR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1RXBUF               00D6 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 00D7 - 00D7 (0x1 bytes), align: 0
  Segment part 12. ROOT.      Intra module refs:   uartTxISR
                                                   uart_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1TXBUF               00D7 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 15FB - 167A (0x80 bytes), align: 0
  Segment part 16.            Intra module refs:   uartTxISR
                                                   uart_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uartTxBuf               15FB 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 167B - 177A (0x100 bytes), align: 0
  Segment part 17.            Intra module refs:   uartRxISR
                                                   uart_read
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uartRxBuf               167B 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1572 - 1573 (0x2 bytes), align: 1
  Segment part 18.            Intra module refs:   uartRxISR
                                                   uart_init
                                                   uart_read
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uartRxNextIn            1572 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1574 - 1575 (0x2 bytes), align: 1
  Segment part 19.            Intra module refs:   uartRxISR
                                                   uart_init
                                                   uart_read
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uartRxNextOut           1574 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 177B - 177B (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   uartRxISR
                                                   uart_init
                                                   uart_read
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bUartRxValid            177B 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1576 - 1577 (0x2 bytes), align: 1
  Segment part 21.            Intra module refs:   uartTxISR
                                                   uart_init
                                                   uart_send
                                                   uart_send_available
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uartTxNextIn            1576 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1578 - 1579 (0x2 bytes), align: 1
  Segment part 22.            Intra module refs:   uartTxISR
                                                   uart_init
                                                   uart_send
                                                   uart_send_available
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uartTxNextOut           1578 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 177C - 177C (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   uartTxISR
                                                   uart_init
                                                   uart_is_tx_clear
                                                   uart_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bUartTxClear            177C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 725C - 7263 (0x8 bytes), align: 1
  Segment part 30.            Intra module refs:   uart_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uart_enable             725C 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6A50 - 6A9F (0x50 bytes), align: 1
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uart_init               6A50            main (main)
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 684A - 68A3 (0x5a bytes), align: 1
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uart_send               684A            gps_init (gps)
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6956 - 69A9 (0x54 bytes), align: 1
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uart_read               6956            gps_init (gps)
                                                   main (main)
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 718E - 719F (0x12 bytes), align: 1
  Segment part 27.            Intra module refs:   uart_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uart_send_available     718E 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7264 - 7269 (0x6 bytes), align: 1
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uart_is_tx_clear        7264            gps_init (gps)
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 3136 - 3169 (0x34 bytes), align: 1
  Segment part 25.            Intra module refs:   uartTxISR::??INTVEC 32
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uartTxISR               3136 
               interrupt function
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 316A - 31B5 (0x4c bytes), align: 1
  Segment part 24.            Intra module refs:   uartRxISR::??INTVEC 34
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uartRxISR               316A 
               interrupt function
               CSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FFC0 - FFE1 (0x22 bytes), align: 1
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uartTxISR::??INTVEC 32
                                   FFE0 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FFC0 - FFE3 (0x24 bytes), align: 1
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uartRxISR::??INTVEC 34
                                   FFE2 

    *************************************************************************

  FILE NAME : C:\Program Files\IAR Systems\Embedded Workbench 6.0_0\430\LIB\DLIB\dl430xsfn.r43
  LIBRARY MODULE, NAME : ?Mul32fHw

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 5828 - 5959 (0x132 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Mul32fHw               5828            _LdtobLarge (?xprintflarge)
                                                   parse_coord (gps)
                                                   scale (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__dbg_break

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 7284 - 7285 (0x2 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __DebugBreak            7284            __exit (?__exit)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 7072 - 7087 (0x16 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  7072            Segment part 5 (?_exit)
                                                   _exit (?_exit)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?_exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 726A, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _exit                   726A            exit (?exit)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 726A - 726D (0x4 bytes), align: 1
  Segment part 5.             Intra module refs:   _exit

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cstart

  SEGMENTS IN THE MODULE
  ======================
CSTACK
  Relative segment, address: 2D00, align: 1
  Segment part 1.
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 157A, align: 1
  Segment part 2.
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 1112, align: 1
  Segment part 3.
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 3504, align: 1
  Segment part 4.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 3100 - 3103 (0x4 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         3100            ?reset_vector (?reset_vector)
                                                   Absolute parts (?ABS_ENTRY_MOD)
           ?cstart_begin           3100 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 3104 - 310F (0xc bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_zero       3104            FatFs (ff)
                                                   Fatfs (main)
                                                   Fil (main)
                                                   Fsid (ff)
                                                   bUartRxValid (uart)
                                                   bUartTxClear (uart)
                                                   fat_hour (diskio)
                                                   fat_minutes (diskio)
                                                   fat_seconds (diskio)
                                                   line (main)
                                                   result (main)
                                                   uartRxBuf (uart)
                                                   uartRxNextIn (uart)
                                                   uartRxNextOut (uart)
                                                   uartTxBuf (uart)
                                                   uartTxNextIn (uart)
                                                   uartTxNextOut (uart)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 3110 - 311F (0x10 bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_copy       3110            DUMMY_CHAR (mmc)
                                                   KML_Footer (main)
                                                   KML_Header (main)
                                                   fat_day (diskio)
                                                   fat_month (diskio)
                                                   fat_year (diskio)
                                                   gps_line_header (gps)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 3120 - 3127 (0x8 bytes), align: 1
  Segment part 19.            Intra module refs:   Segment part 10
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_main       3120 
           ?cstart_end             3128 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?reset_vector

  SEGMENTS IN THE MODULE
  ======================
RESET
  Relative segment, address: FFFE - FFFF (0x2 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?reset_vector           FFFE            Segment part 10 (?cstart)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?div64i

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 56E4 - 5787 (0xa4 bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Div64u                 56E4            _LitobLarge (?xprintflarge)
               CSTACK = 00000000 ( 0000001E )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 5788 - 5795 (0xe bytes), align: 1
  Segment part 6.             Intra module refs:   _Div64u
                                                   _Mod64u
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 5796 - 57A5 (0x10 bytes), align: 1
  Segment part 7.             Intra module refs:   _Div64u
                                                   _Mod64u
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 57A6 - 57BF (0x1a bytes), align: 1
  Segment part 8.             Intra module refs:   _Div64u
                                                   _Mod64u
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 57C0 - 5827 (0x68 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Mod64u                 57C0            _LitobLarge (?xprintflarge)
               CSTACK = 00000000 ( 00000016 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?div

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 70B4 - 70C9 (0x16 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           div                     70B4            _GenldLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 726E - 7271 (0x4 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    726E            Segment part 19 (?cstart)
               calls direct
               CSTACK = 00000000 ( 00000004 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Cast32f32i

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 63AC - 643D (0x92 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Cast32sto32f           63AC            parse_coord (gps)
           _Cast32uto32f           63C0            _LdtobLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _Cast32fto32u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 7230 - 723B (0xc bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Cast32fto32u           7230            _LdtobLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_Extract

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6B38 - 6B83 (0x4c bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_Extract            6B38            _Cast32fto32u (_Cast32fto32u)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_LT

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 69FE - 6A4F (0x52 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_LT                 69FE            _CmpLt32f (_CmpLt32f)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _CmpLt32f

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 7248 - 7251 (0xa bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _CmpLt32f               7248            _LdtobLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _Div32f

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 595A - 5A89 (0x130 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Div32f                 595A            _LdtobLarge (?xprintflarge)
                                                   parse_coord (gps)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _Add32f

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 5582 - 56E3 (0x162 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Add32f                 5586            parse_coord (gps)
           _Sub32f                 5582            _LdtobLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6FC6 - 6FE1 (0x1c bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod8u               6FC6 
           ?DivMod16u              6FCA            Segment part 0 (?DivMod816s)
                                                   chk_mounted (ff)
                                                   dir_next (ff)
                                                   dir_sdi (ff)
                                                   get_fat (ff)
                                                   put_fat (ff)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816s

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6D4A - 6D7D (0x34 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod8s               6D4A 
           ?DivMod16s              6D4E            div (?div)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod32u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6D12 - 6D49 (0x38 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod32u              6D12            ?DivMod32s (?DivMod32s)
                                                   Segment part 16 (?xprintflarge)
                                                   chk_mounted (ff)
                                                   f_write (ff)
                                                   get_fat (ff)
                                                   put_fat (ff)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod32s

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6C94 - 6CD3 (0x40 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod32s              6C94            _LdtobLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ShiftLeft32

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 705C - 705F (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftLeft32_5          705C            get_fattime (diskio)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7060 - 7063 (0x4 bytes), align: 1
  Segment part 4.             Intra module refs:   ?ShiftLeft32_5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftLeft32_4          7060 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7064 - 7071 (0xe bytes), align: 1
  Segment part 5.             Intra module refs:   ?ShiftLeft32_4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftLeft32_3          7064 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ShiftLeft32_8n

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 702C - 702F (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftLeft32_11         702C            get_fattime (diskio)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7030 - 7033 (0x4 bytes), align: 1
  Segment part 4.             Intra module refs:   ?ShiftLeft32_11
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftLeft32_10         7030 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7034 - 7037 (0x4 bytes), align: 1
  Segment part 5.             Intra module refs:   ?ShiftLeft32_10
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftLeft32_9          7034 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7038 - 7043 (0xc bytes), align: 1
  Segment part 6.             Intra module refs:   ?ShiftLeft32_9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftLeft32_8          7038 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ShiftRight32u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 678E - 67CD (0x40 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight32u          678E            mmcSendCmd (mmc)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 67CE - 67D1 (0x4 bytes), align: 1
  Segment part 1.             Intra module refs:   ?ShiftRight32u
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight32u_7        67CE            get_fat (ff)
                                                   put_fat (ff)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 67D2 - 67D5 (0x4 bytes), align: 1
  Segment part 2.             Intra module refs:   ?ShiftRight32u_7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight32u_6        67D2 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 67D6 - 67D9 (0x4 bytes), align: 1
  Segment part 3.             Intra module refs:   ?ShiftRight32u_6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight32u_5        67D6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 67DA - 67DD (0x4 bytes), align: 1
  Segment part 4.             Intra module refs:   ?ShiftRight32u_5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight32u_4        67DA 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 67DE - 67E1 (0x4 bytes), align: 1
  Segment part 5.             Intra module refs:   ?ShiftRight32u_4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight32u_3        67DE 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 67E2 - 67EB (0xa bytes), align: 1
  Segment part 6.             Intra module refs:   ?ShiftRight32u_3
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight32u_2        67E2 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ShiftRight32u_8n

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 71D6 - 71D9 (0x4 bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight32u_9        71D6            chk_mounted (ff)
                                                   f_write (ff)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 71DA - 71E5 (0xc bytes), align: 1
  Segment part 6.             Intra module refs:   ?ShiftRight32u_9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight32u_8        71DA 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memchr

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 70CA - 70DF (0x16 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Memchr            70CA            _PrintfLarge (?xprintflarge)
               CSTACK = 00000000 ( 00000004 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memcpy

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 7146 - 7157 (0x12 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy                  7146            Segment part 13 (?xprintflarge)
                                                   _GenldLarge (?xprintflarge)
                                                   _LdtobLarge (?xprintflarge)
                                                   __data16_memcpy (?memzero)
               CSTACK = 00000000 ( 00000004 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memzero

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 7158 - 7169 (0x12 bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memzero        7158            ?cstart_init_zero (?cstart)
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7276 - 7279 (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memcpy         7276            ?cstart_init_copy (?cstart)
               calls direct
               CSTACK = 00000000 ( 00000004 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Mul32Hw

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6DB0 - 6DDF (0x30 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Mul32Hw                6DB0            _LdtobLarge (?xprintflarge)
                                                   chk_mounted (ff)
                                                   clust2sect (ff)
                                                   disk_read (diskio)
                                                   disk_write (diskio)
                                                   get_fat (ff)
                                                   put_fat (ff)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?IndCallR15

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 727E - 7281 (0x4 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?IndCallR15             727E            _PutcharLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?sprintf

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6C52 - 6C93 (0x42 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sprintf                 6C52            main (main)
                                                   spool_coords (main)
               calls direct
               CSTACK = 00000000 ( 0000000C )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strchr

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 7206 - 7215 (0x10 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Strchr            7206            _PrintfLarge (?xprintflarge)
               CSTACK = 00000000 ( 00000004 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strlen

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 71C4 - 71D5 (0x12 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen                  71C4            _PrintfLarge (?xprintflarge)
                                                   main (main)
               CSTACK = 00000000 ( 00000004 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xdunscal

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6AA0 - 6AEB (0x4c bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Dunscale          6AA0            _LdtobLarge (?xprintflarge)
               CSTACK = 00000000 ( 00000004 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xprintflarge

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 3506 - 357B (0x76 bytes), align: 1
  Segment part 23.            Intra module refs:   _PrintfLarge
           LOCAL                   ADDRESS         
           =====                   =======         
           LoadInt                 3506 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 357C - 3585 (0xa bytes), align: 1
  Segment part 24.            Intra module refs:   LoadInt
                                                   _LdtobLarge
                                                   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 3586 - 3A61 (0x4dc bytes), align: 1
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _PrintfLarge            3586            sprintf (?sprintf)
               calls direct
               CSTACK = 00000000 ( 00000074 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 3A62 - 3A69 (0x8 bytes), align: 1
  Segment part 26.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 3A6A - 3A77 (0xe bytes), align: 1
  Segment part 27.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 3A78 - 3A7D (0x6 bytes), align: 1
  Segment part 28.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 3A7E - 3A85 (0x8 bytes), align: 1
  Segment part 29.            Intra module refs:   Segment part 28
                                                   Segment part 30
                                                   Segment part 31
                                                   Segment part 32
                                                   Segment part 33
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 3A86 - 3A91 (0xc bytes), align: 1
  Segment part 30.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 3A92 - 3A9D (0xc bytes), align: 1
  Segment part 31.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 3A9E - 3AA9 (0xc bytes), align: 1
  Segment part 32.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 3AAA - 3AB5 (0xc bytes), align: 1
  Segment part 33.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 3AB6 - 3AC3 (0xe bytes), align: 1
  Segment part 34.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 3AC4 - 3AD1 (0xe bytes), align: 1
  Segment part 35.            Intra module refs:   _LitobLarge
                                                   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 3AD2 - 3AE1 (0x10 bytes), align: 1
  Segment part 36.            Intra module refs:   LoadInt
                                                   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6E6C - 6E97 (0x2c bytes), align: 1
  Segment part 22.            Intra module refs:   Segment part 26
           LOCAL                   ADDRESS         
           =====                   =======         
           pad                     6E6C 
               calls direct
               CSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 4F50 - 50ED (0x19e bytes), align: 1
  Segment part 17.            Intra module refs:   _PrintfLarge
           LOCAL                   ADDRESS         
           =====                   =======         
           _LitobLarge             4F50 
               calls direct
               CSTACK = 00000000 ( 0000002A )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7216 - 7223 (0xe bytes), align: 1
  Segment part 18.            Intra module refs:   _LitobLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 71B2 - 71C3 (0x12 bytes), align: 1
  Segment part 19.            Intra module refs:   _LitobLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7132 - 7145 (0x14 bytes), align: 1
  Segment part 20.            Intra module refs:   _LitobLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 716A - 717B (0x12 bytes), align: 1
  Segment part 21.            Intra module refs:   _LitobLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6C10 - 6C51 (0x42 bytes), align: 1
  Segment part 14.            Intra module refs:   _LdtobLarge
           LOCAL                   ADDRESS         
           =====                   =======         
           scale                   6C10 
               calls direct
               CSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 45B2 - 4803 (0x252 bytes), align: 1
  Segment part 15.            Intra module refs:   _PrintfLarge
           LOCAL                   ADDRESS         
           =====                   =======         
           _LdtobLarge             45B2 
               calls direct
               CSTACK = 00000000 ( 0000004A )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 71A0 - 71B1 (0x12 bytes), align: 1
  Segment part 16.            Intra module refs:   _LdtobLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 435C - 45B1 (0x256 bytes), align: 1
  Segment part 10.            Intra module refs:   _LdtobLarge
           LOCAL                   ADDRESS         
           =====                   =======         
           _GenldLarge             435C 
               calls direct
               CSTACK = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 71F6 - 7205 (0x10 bytes), align: 1
  Segment part 11.            Intra module refs:   _GenldLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 71E6 - 71F5 (0x10 bytes), align: 1
  Segment part 12.            Intra module refs:   _GenldLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 710A - 711D (0x14 bytes), align: 1
  Segment part 13.            Intra module refs:   _GenldLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6EF0 - 6F19 (0x2a bytes), align: 1
  Segment part 8.             Intra module refs:   _PrintfLarge
                                                   _PutcharsLarge
           LOCAL                   ADDRESS         
           =====                   =======         
           _PutcharLarge           6EF0 
               calls indirect
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6F62 - 6F83 (0x22 bytes), align: 1
  Segment part 9.             Intra module refs:   _PrintfLarge
                                                   pad
           LOCAL                   ADDRESS         
           =====                   =======         
           _PutcharsLarge          6F62 
               calls direct
               CSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 717C - 718D (0x12 bytes), align: 1
  Segment part 37.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 34D9 - 34DF (0x7 bytes), align: 0
  Segment part 2.             Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 34E0 - 34E3 (0x4 bytes), align: 0
  Segment part 3.             Intra module refs:   _LdtobLarge
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 34E4 - 34E7 (0x4 bytes), align: 0
  Segment part 4.             Intra module refs:   _LdtobLarge
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 34E8 - 34EB (0x4 bytes), align: 0
  Segment part 5.             Intra module refs:   _LdtobLarge
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 34EC - 34EF (0x4 bytes), align: 0
  Segment part 6.             Intra module refs:   _LdtobLarge
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 34F0 - 34F1 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   _GenldLarge

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xsprout

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 723C - 7247 (0xc bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _SProut                 723C            sprintf (?sprintf)
               CSTACK = 00000000 ( 00000004 )




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module                CODE      DATA      CONST
------                ----      ----      -----
                     (Rel)  (Rel)  (Abs)  (Rel)
?Cast32f32i            146
?DivMod32s              64
?DivMod32u              56
?DivMod816s             52
?DivMod816u             28
?FLT_Extract            76
?FLT_LT                 82
?IndCallR15              4
?Mul32Hw                48
?Mul32fHw              306
?ShiftLeft32            22
?ShiftLeft32_8n         24
?ShiftRight32u          94
?ShiftRight32u_8n       16
?__dbg_break             2
?__exit                 22
?_exit                   4
?cstart                 40
?div                    22
?div64i                324
?exit                    4
?memchr                 22
?memcpy                 18
?memzero                22
?reset_vector            2
?sprintf                66
?strchr                 16
?strlen                 18
?xdunscal               76
?xprintflarge        3 450                   25
?xsprout                12
_Add32f                354
_Cast32fto32u           12
_CmpLt32f               10
_Div32f                304
diskio                 456     24            12
  + shared                             2
ff                   6 470      4           143
gps                  1 272      2           190
  + shared                             2
main                   596  1 235     12    476
  + common              38
mmc                    680      1             1
sd_spi                 160             7
  + shared                             1
timer                   62
uart                   414    394     10
  + common              36
N/A (command line)          1 024
N/A (alignment)
----------          ------  -----     --    ---
Total:              15 928  2 684     34    847
  + common              38


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK
    | Stack used (prev) :  00000000
  01  ButtonISR
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000004


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK
    | Stack used (prev) :  00000004
  01  uartTxISR
      | Stack used (prev) :  00000004
      | + function block  :  00000006
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  0000000A


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK
    | Stack used (prev) :  0000000A
  01  uartRxISR
      | Stack used (prev) :  0000000A
      | + function block  :  0000000A
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000014
  01  __iar_Memchr
      | Stack used (prev) :  00000014
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000018


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000014
  01  memcpy
      | Stack used (prev) :  00000014
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000018


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000014
  01  __iar_Strchr
      | Stack used (prev) :  00000014
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000018


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000014
  01  strlen
      | Stack used (prev) :  00000014
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000018


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000014
  01  _SProut
      | Stack used (prev) :  00000014
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000018


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000018
  02    strlen
        | Stack used (prev) :  00000014
        | + function block  :  00000004
        |  Already listed
  05          _PutcharLarge
              | Stack used (prev) :  00000018
              | + function block  :  00000006
  04        _PutcharsLarge
            | Stack used (prev) :  0000001E
            | + function block  :  0000000C
  04        _PutcharsLarge
            | Stack used (prev) :  0000001E
            | + function block  :  0000000C
            |  Already listed
  04        _PutcharsLarge
            | Stack used (prev) :  0000001E
            | + function block  :  0000000C
            |  Already listed
  04        _PutcharLarge
            | Stack used (prev) :  00000018
            | + function block  :  00000006
            |  Already listed
  06            memcpy
                | Stack used (prev) :  00000014
                | + function block  :  00000004
                |  Already listed
  05          _GenldLarge
              | Stack used (prev) :  00000018
              | + function block  :  00000020
  05          scale
              | Stack used (prev) :  00000018
              | + function block  :  00000010
  05          scale
              | Stack used (prev) :  00000018
              | + function block  :  00000010
              |  Already listed
  05          __iar_Dunscale
              | Stack used (prev) :  00000018
              | + function block  :  00000004
  05          memcpy
              | Stack used (prev) :  00000014
              | + function block  :  00000004
              |  Already listed
  04        _LdtobLarge
            | Stack used (prev) :  00000038
            | + function block  :  0000004A
  05          _Mod64u
              | Stack used (prev) :  00000018
              | + function block  :  00000016
  05          _Div64u
              | Stack used (prev) :  00000018
              | + function block  :  0000001E
  04        _LitobLarge
            | Stack used (prev) :  00000036
            | + function block  :  0000002A
  04        _LitobLarge
            | Stack used (prev) :  00000036
            | + function block  :  0000002A
            |  Already listed
  05          _PutcharsLarge
              | Stack used (prev) :  0000001E
              | + function block  :  0000000C
              |  Already listed
  04        pad
            | Stack used (prev) :  0000002A
            | + function block  :  0000000E
  04        pad
            | Stack used (prev) :  0000002A
            | + function block  :  0000000E
            |  Already listed
  04        pad
            | Stack used (prev) :  0000002A
            | + function block  :  0000000E
            |  Already listed
  04        pad
            | Stack used (prev) :  0000002A
            | + function block  :  0000000E
            |  Already listed
  04        pad
            | Stack used (prev) :  0000002A
            | + function block  :  0000000E
            |  Already listed
  04        LoadInt
            | Stack used (prev) :  00000018
            | + function block  :  00000004
  04        strlen
            | Stack used (prev) :  00000014
            | + function block  :  00000004
            |  Already listed
  04        __iar_Strchr
            | Stack used (prev) :  00000014
            | + function block  :  00000004
            |  Already listed
  04        __iar_Memchr
            | Stack used (prev) :  00000014
            | + function block  :  00000004
            |  Already listed
  03      _PrintfLarge
          | Stack used (prev) :  00000082
          | + function block  :  00000074
  02    sprintf
        | Stack used (prev) :  000000F6
        | + function block  :  0000000C
  02    uart_read
        | Stack used (prev) :  00000018
        | + function block  :  00000006
  03      uart_enable
          | Stack used (prev) :  00000018
          | + function block  :  00000004
  02    uart_init
        | Stack used (prev) :  0000001C
        | + function block  :  00000004
  02    record_button_init
        | Stack used (prev) :  00000018
        | + function block  :  00000004
  03      sprintf
          | Stack used (prev) :  000000F6
          | + function block  :  0000000C
          |  Already listed
  02    spool_coords
        | Stack used (prev) :  00000102
        | + function block  :  0000000C
  03      timers_setup
          | Stack used (prev) :  00000018
          | + function block  :  00000004
  03      clocks_setup
          | Stack used (prev) :  00000018
          | + function block  :  00000004
  03      led_setup
          | Stack used (prev) :  00000018
          | + function block  :  00000004
  02    hw_setup
        | Stack used (prev) :  0000001C
        | + function block  :  00000004
  03      parse_date
          | Stack used (prev) :  00000018
          | + function block  :  00000004
  03      parse_coord
          | Stack used (prev) :  00000018
          | + function block  :  00000018
  03      parse_coord
          | Stack used (prev) :  00000018
          | + function block  :  00000018
          |  Already listed
  03      parse_time
          | Stack used (prev) :  00000018
          | + function block  :  00000004
  02    parse_line
        | Stack used (prev) :  00000030
        | + function block  :  0000000C
  03      uart_is_tx_clear
          | Stack used (prev) :  00000018
          | + function block  :  00000004
  03      uart_read
          | Stack used (prev) :  00000018
          | + function block  :  00000006
          |  Already listed
  04        uart_send_available
            | Stack used (prev) :  00000018
            | + function block  :  00000004
  03      uart_send
          | Stack used (prev) :  0000001C
          | + function block  :  00000004
  03      wait
          | Stack used (prev) :  00000018
          | + function block  :  0000000A
  02    gps_init
        | Stack used (prev) :  00000022
        | + function block  :  00000006
  05          disk_status
              | Stack used (prev) :  00000018
              | + function block  :  00000004
  04        validate
            | Stack used (prev) :  0000001C
            | + function block  :  00000004
  08                sd_spi_write_byte
                    | Stack used (prev) :  00000018
                    | + function block  :  00000004
  08                sd_spi_write
                    | Stack used (prev) :  00000018
                    | + function block  :  00000004
  09                  sd_spi_write_byte
                      | Stack used (prev) :  00000018
                      | + function block  :  00000004
                      |  Already listed
  10                    sd_spi_write
                        | Stack used (prev) :  00000018
                        | + function block  :  00000004
                        |  Already listed
  09                  mmcSendCmd
                      | Stack used (prev) :  0000001C
                      | + function block  :  00000012
  09                  mmcSendCmd
                      | Stack used (prev) :  0000001C
                      | + function block  :  00000012
                      |  Already listed
  10                    sd_spi_write_byte
                        | Stack used (prev) :  00000018
                        | + function block  :  00000004
                        |  Already listed
  09                  mmcGetResponse
                      | Stack used (prev) :  0000001C
                      | + function block  :  00000006
  09                  mmcGetResponse
                      | Stack used (prev) :  0000001C
                      | + function block  :  00000006
                      |  Already listed
  10                    sd_spi_write_byte
                        | Stack used (prev) :  00000018
                        | + function block  :  00000004
                        |  Already listed
  11                      sd_spi_write_byte
                          | Stack used (prev) :  00000018
                          | + function block  :  00000004
                          |  Already listed
  11                      mmcSendCmd
                          | Stack used (prev) :  0000001C
                          | + function block  :  00000012
                          |  Already listed
  11                      mmcSendCmd
                          | Stack used (prev) :  0000001C
                          | + function block  :  00000012
                          |  Already listed
  11                      mmcGetResponse
                          | Stack used (prev) :  0000001C
                          | + function block  :  00000006
                          |  Already listed
  11                      mmcGetResponse
                          | Stack used (prev) :  0000001C
                          | + function block  :  00000006
                          |  Already listed
  10                    mmcGoIdle
                        | Stack used (prev) :  0000002E
                        | + function block  :  00000006
  09                  mmcInit
                      | Stack used (prev) :  00000034
                      | + function block  :  00000006
  08                mmcSetBlockLength
                    | Stack used (prev) :  0000003A
                    | + function block  :  00000008
  08                mmcSendCmd
                    | Stack used (prev) :  0000001C
                    | + function block  :  00000012
                    |  Already listed
  09                  sd_spi_write_byte
                      | Stack used (prev) :  00000018
                      | + function block  :  00000004
                      |  Already listed
  08                mmcCheckBusy
                    | Stack used (prev) :  0000001C
                    | + function block  :  00000006
  09                  sd_spi_write_byte
                      | Stack used (prev) :  00000018
                      | + function block  :  00000004
                      |  Already listed
  08                mmcGetXXResponse
                    | Stack used (prev) :  0000001C
                    | + function block  :  00000008
  07              mmcWriteBlock
                  | Stack used (prev) :  00000042
                  | + function block  :  00000010
  06            disk_write
                | Stack used (prev) :  00000052
                | + function block  :  00000012
  08                sd_spi_read
                    | Stack used (prev) :  00000018
                    | + function block  :  00000006
  08                sd_spi_write_byte
                    | Stack used (prev) :  00000018
                    | + function block  :  00000004
                    |  Already listed
  08                mmcSetBlockLength
                    | Stack used (prev) :  0000003A
                    | + function block  :  00000008
                    |  Already listed
  08                mmcSendCmd
                    | Stack used (prev) :  0000001C
                    | + function block  :  00000012
                    |  Already listed
  08                mmcGetXXResponse
                    | Stack used (prev) :  0000001C
                    | + function block  :  00000008
                    |  Already listed
  08                mmcGetResponse
                    | Stack used (prev) :  0000001C
                    | + function block  :  00000006
                    |  Already listed
  07              mmcReadBlock
                  | Stack used (prev) :  00000042
                  | + function block  :  00000010
  06            disk_read
                | Stack used (prev) :  00000052
                | + function block  :  00000012
  05          move_window
              | Stack used (prev) :  00000064
              | + function block  :  00000012
  05          mem_set
              | Stack used (prev) :  00000018
              | + function block  :  00000004
  05          disk_ioctl
              | Stack used (prev) :  00000018
              | + function block  :  00000004
  05          disk_write
              | Stack used (prev) :  00000052
              | + function block  :  00000012
              |  Already listed
  04        sync
            | Stack used (prev) :  00000076
            | + function block  :  00000008
  04        move_window
            | Stack used (prev) :  00000064
            | + function block  :  00000012
            |  Already listed
  04        get_fattime
            | Stack used (prev) :  00000018
            | + function block  :  00000014
  04        disk_write
            | Stack used (prev) :  00000052
            | + function block  :  00000012
            |  Already listed
  03      f_sync
          | Stack used (prev) :  0000007E
          | + function block  :  00000008
  02    f_close
        | Stack used (prev) :  00000086
        | + function block  :  00000006
  03      validate
          | Stack used (prev) :  0000001C
          | + function block  :  00000004
          |  Already listed
  05          move_window
              | Stack used (prev) :  00000064
              | + function block  :  00000012
              |  Already listed
  05          move_window
              | Stack used (prev) :  00000064
              | + function block  :  00000012
              |  Already listed
  05          move_window
              | Stack used (prev) :  00000064
              | + function block  :  00000012
              |  Already listed
  05          move_window
              | Stack used (prev) :  00000064
              | + function block  :  00000012
              |  Already listed
  04        put_fat
            | Stack used (prev) :  00000076
            | + function block  :  00000014
  04        put_fat
            | Stack used (prev) :  00000076
            | + function block  :  00000014
            |  Already listed
  05          move_window
              | Stack used (prev) :  00000064
              | + function block  :  00000012
              |  Already listed
  05          move_window
              | Stack used (prev) :  00000064
              | + function block  :  00000012
              |  Already listed
  05          move_window
              | Stack used (prev) :  00000064
              | + function block  :  00000012
              |  Already listed
  05          move_window
              | Stack used (prev) :  00000064
              | + function block  :  00000012
              |  Already listed
  04        get_fat
            | Stack used (prev) :  00000076
            | + function block  :  00000010
  04        get_fat
            | Stack used (prev) :  00000076
            | + function block  :  00000010
            |  Already listed
  03      create_chain
          | Stack used (prev) :  0000008A
          | + function block  :  00000018
  03      create_chain
          | Stack used (prev) :  0000008A
          | + function block  :  00000018
          |  Already listed
  03      clust2sect
          | Stack used (prev) :  00000018
          | + function block  :  00000006
  03      mem_cpy
          | Stack used (prev) :  00000018
          | + function block  :  00000004
  03      mem_cpy
          | Stack used (prev) :  00000018
          | + function block  :  00000004
          |  Already listed
  03      disk_write
          | Stack used (prev) :  00000052
          | + function block  :  00000012
          |  Already listed
  03      disk_read
          | Stack used (prev) :  00000052
          | + function block  :  00000012
          |  Already listed
  02    f_write
        | Stack used (prev) :  000000A2
        | + function block  :  00000014
  05          disk_read
              | Stack used (prev) :  00000052
              | + function block  :  00000012
              |  Already listed
  04        check_fs
            | Stack used (prev) :  00000064
            | + function block  :  00000008
  04        check_fs
            | Stack used (prev) :  00000064
            | + function block  :  00000008
            |  Already listed
  04        disk_read
            | Stack used (prev) :  00000052
            | + function block  :  00000012
            |  Already listed
  04        disk_status
            | Stack used (prev) :  00000018
            | + function block  :  00000004
            |  Already listed
  05          mmcInit
              | Stack used (prev) :  00000034
              | + function block  :  00000006
              |  Already listed
  06            sd_spi_init
                | Stack used (prev) :  00000018
                | + function block  :  00000004
  05          sd_hw_init
              | Stack used (prev) :  0000001C
              | + function block  :  00000004
  04        disk_initialize
            | Stack used (prev) :  0000003A
            | + function block  :  00000004
  03      chk_mounted
          | Stack used (prev) :  0000006C
          | + function block  :  00000016
  05          chk_chr
              | Stack used (prev) :  00000018
              | + function block  :  00000004
  05          mem_set
              | Stack used (prev) :  00000018
              | + function block  :  00000004
              |  Already listed
  04        create_name
            | Stack used (prev) :  0000001C
            | + function block  :  00000014
  06            create_chain
                | Stack used (prev) :  0000008A
                | + function block  :  00000018
                |  Already listed
  06            get_fat
                | Stack used (prev) :  00000076
                | + function block  :  00000010
                |  Already listed
  06            clust2sect
                | Stack used (prev) :  00000018
                | + function block  :  00000006
                |  Already listed
  06            clust2sect
                | Stack used (prev) :  00000018
                | + function block  :  00000006
                |  Already listed
  06            move_window
                | Stack used (prev) :  00000064
                | + function block  :  00000012
                |  Already listed
  06            move_window
                | Stack used (prev) :  00000064
                | + function block  :  00000012
                |  Already listed
  06            mem_set
                | Stack used (prev) :  00000018
                | + function block  :  00000004
                |  Already listed
  05          dir_next
              | Stack used (prev) :  000000A2
              | + function block  :  00000010
  06            get_fat
                | Stack used (prev) :  00000076
                | + function block  :  00000010
                |  Already listed
  06            clust2sect
                | Stack used (prev) :  00000018
                | + function block  :  00000006
                |  Already listed
  05          dir_sdi
              | Stack used (prev) :  00000086
              | + function block  :  0000000C
  05          move_window
              | Stack used (prev) :  00000064
              | + function block  :  00000012
              |  Already listed
  05          mem_cmp
              | Stack used (prev) :  00000018
              | + function block  :  00000006
  04        dir_find
            | Stack used (prev) :  000000B2
            | + function block  :  00000008
  04        dir_sdi
            | Stack used (prev) :  00000086
            | + function block  :  0000000C
            |  Already listed
  03      follow_path
          | Stack used (prev) :  000000BA
          | + function block  :  00000008
  04        dir_next
            | Stack used (prev) :  000000A2
            | + function block  :  00000010
            |  Already listed
  04        dir_sdi
            | Stack used (prev) :  00000086
            | + function block  :  0000000C
            |  Already listed
  04        move_window
            | Stack used (prev) :  00000064
            | + function block  :  00000012
            |  Already listed
  04        move_window
            | Stack used (prev) :  00000064
            | + function block  :  00000012
            |  Already listed
  04        mem_set
            | Stack used (prev) :  00000018
            | + function block  :  00000004
            |  Already listed
  04        mem_cpy
            | Stack used (prev) :  00000018
            | + function block  :  00000004
            |  Already listed
  03      dir_register
          | Stack used (prev) :  000000B2
          | + function block  :  0000000C
  04        put_fat
            | Stack used (prev) :  00000076
            | + function block  :  00000014
            |  Already listed
  04        get_fat
            | Stack used (prev) :  00000076
            | + function block  :  00000010
            |  Already listed
  03      remove_chain
          | Stack used (prev) :  0000008A
          | + function block  :  00000014
  03      move_window
          | Stack used (prev) :  00000064
          | + function block  :  00000012
          |  Already listed
  03      get_fattime
          | Stack used (prev) :  00000018
          | + function block  :  00000014
          |  Already listed
  02    f_open
        | Stack used (prev) :  000000C2
        | + function block  :  00000038
  02    f_mount
        | Stack used (prev) :  00000018
        | + function block  :  00000004
  02    update_fattime
        | Stack used (prev) :  00000018
        | + function block  :  00000008
  01  main
      | Stack used (prev) :  0000010E
      | + function block  :  00000026
  <-Sub-tree of type: Function tree
    | Stack used          :  00000134


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000134
  01  exit
      | Stack used (prev) :  00000134
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000138


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000138
  01  __data16_memzero
      | Stack used (prev) :  00000138
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000013C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000013C
  02    memcpy
        | Stack used (prev) :  00000014
        | + function block  :  00000004
        |  Already listed
  01  __data16_memcpy
      | Stack used (prev) :  0000013C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000140




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
DATA16_AN                              0003 - 0003               1   rel    0
                                       0006 - 0007               2 
                                       0019 - 001B               3 
                                       001D - 001E               2 
                                       0020 - 0021               2 
                                       0023 - 0025               3 
                                       0027 - 0027               1 
                                       0053 - 0053               1 
                                       0056 - 0058               3 
                                       0068 - 006B               4 
                                       006E - 006F               2 
                                       00D0 - 00D7               8 
                                       0120 - 0121               2 
DATA16_I                               1100 - 1112              13   rel    1
DATA16_Z                               1114 - 177C             669   rel    1
CSTACK                                 2D00 - 30FF             400   rel    1
CSTART                                 3100 - 3127              28   rel    1
ISR_CODE                               3128 - 31B5              8E   rel    1
DATA16_C                               31B6 - 34F1             33C   rel    0
DATA16_ID                              34F2 - 3504              13   rel    1
<CODE> 1                               3506 - 7285            3D80   rel    1
INTVEC                                 FFC0 - FFE5              26   com    1
RESET                                  FFFE - FFFF               2   rel    1

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 15 966 bytes of CODE  memory
  2 684 bytes of DATA  memory (+ 34 absolute )
    847 bytes of CONST memory

Errors: none
Warnings: none

