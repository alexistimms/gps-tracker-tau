################################################################################
#                                                                              #
#      IAR Universal Linker V5.0.2.5/W32                                       #
#                                                                              #
#           Link time     =  25/Mar/2012  18:49:07                             #
#           Target CPU    =  MSP430                                            #
#           List file     =  "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\List\GPS.map"                                   #
#           Output file 1 =  "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\Exe\GPS.d43"                                    #
#                            Format: debug                                     #
#                            UBROF version 10.0.3                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\Obj\diskio.r43"                                 #
#                            "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\Obj\ff.r43"                                     #
#                            "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\Obj\gps.r43"                                    #
#                            "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\Obj\main.r43"                                   #
#                            "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\Obj\mmc.r43"                                    #
#                            "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\Obj\sd_spi.r43"                                 #
#                            "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\Obj\timer.r43"                                  #
#                            "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\Obj\uart.r43"                                   #
#                            -o                                                #
#                            "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\Exe\GPS.d43"                                    #
#                            -l                                                #
#                            "C:\Users\owner\Code\TAU project\GPS Tracker\Debu #
#                            g\List\GPS.map"                                   #
#                            -xmsno                                            #
#                            "-IC:\Program Files\IAR Systems\Embedded Workbenc #
#                            h 6.0_0\430\LIB\"                                 #
#                            -f                                                #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            6.0_0\430\CONFIG\lnk430F2618.xcl"                 #
#                            (-cmsp430 -QCODE_I=CODE_ID                        #
#                            -Z(DATA)DATA16_I,DATA16_Z,DATA16_N,DATA16_HEAP+_D #
#                            ATA16_HEAP_SIZE=1100-30FF                         #
#                            -Z(DATA)CODE_I                                    #
#                            -Z(DATA)DATA20_I,DATA20_Z,DATA20_N,DATA20_HEAP+_D #
#                            ATA20_HEAP_SIZE                                   #
#                            -Z(DATA)CSTACK+_STACK_SIZE#                       #
#                            -Z(CONST)INFO=1000-10FF                           #
#                            -Z(CONST)INFOA=10C0-10FF                          #
#                            -Z(CONST)INFOB=1080-10BF                          #
#                            -Z(CONST)INFOC=1040-107F                          #
#                            -Z(CONST)INFOD=1000-103F                          #
#                            -Z(CODE)CSTART,ISR_CODE=3100-FFBF                 #
#                            -Z(CONST)DATA16_C,DATA16_ID,DIFUNCT,CHECKSUM=3100 #
#                            -FFBF                                             #
#                            -P(CODE)CODE=3100-FFBF,10000-1FFFF                #
#                            -Z(CODE)CODE_ID                                   #
#                            -Z(CONST)DATA20_C,DATA20_ID=3100-FFBF,10000-1FFFF #
#                            -Z(CODE)INTVEC=FFC0-FFFF                          #
#                            -Z(CODE)RESET=FFFE-FFFF) -f                       #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            6.0_0\430\config\multiplier.xcl"                  #
#                            (-e?Mul8Hw=?Mul8 -e?Mul16Hw=?Mul16                #
#                            -e?Mul16to32uHw=?Mul16to32u                       #
#                            -e?Mul16to32sHw=?Mul16to32s -e?Mul32Hw=?Mul32     #
#                            -e_Mul64iHw=_Mul64i                               #
#                            -e_Mul32u32uto64iHw=_Mul32u32uto64i               #
#                            -e?Mul32fHw=_Mul32f -e_Mul64fHwPtr=_Mul64fPtr)    #
#                            -D_STACK_SIZE=400 -rt                             #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            6.0_0\430\LIB\DLIB\dl430xsfn.r43"                 #
#                            -e_PrintfLarge=_Printf -e_ScanfLarge=_Scanf       #
#                            -D_DATA16_HEAP_SIZE=50 -s __program_start         #
#                            -D_DATA20_HEAP_SIZE=50                            #
#                                                                              #
#                           Copyright (C) 1987-2010 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at :           3100  Relocatable, from module : ?cstart




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __SystemLibrary            = DLib
  __core                     = 430X
  __data_model               = small
  __dlib_file_descriptor     = 0
  __dlib_full_locale_support = 0
  __double_size              = 32
  __pic                      = no
  __reg_r4                   = free
  __reg_r5                   = free
  __rt_version               = 3



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _DATA20_HEAP_SIZE       0050 
           _DATA16_HEAP_SIZE       0050 
           _STACK_SIZE             0400 
    *************************************************************************

  FILE NAME : C:\Users\owner\Code\TAU project\GPS Tracker\Debug\Obj\diskio.r43
  PROGRAM MODULE, NAME : diskio

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0019 - 0019 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   mmcGoIdle (mmc)
                                                   mmcInit (mmc)
                                                   mmcReadBlock (mmc)
                                                   mmcSetBlockLength (mmc)
                                                   mmcWriteBlock (mmc)
                                                   sd_hw_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P3OUT                   0019 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 001A - 001A (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   sd_hw_init
                                                   sd_spi_init (sd_spi)
                                                   uart_init (uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P3DIR                   001A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6E2C - 6E37 (0xc bytes), align: 1
  Segment part 9.             Intra module refs:   disk_initialize
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sd_hw_init              6E2C 
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6CFE - 6D11 (0x14 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           disk_initialize         6CFE            chk_mounted (ff)
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6E82 - 6E85 (0x4 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           disk_status             6E82            chk_mounted (ff)
                                                   validate (ff)
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 65FA - 664D (0x54 bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           disk_read               65FA            check_fs (ff)
                                                   chk_mounted (ff)
                                                   f_write (ff)
                                                   move_window (ff)
               calls direct
               CSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 64F4 - 654D (0x5a bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           disk_write              64F4            f_sync (ff)
                                                   f_write (ff)
                                                   move_window (ff)
                                                   sync (ff)
               calls direct
               CSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6E8E - 6E91 (0x4 bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           disk_ioctl              6E8E            sync (ff)
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6E64 - 6E6B (0x8 bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_fattime             6E64            f_open (ff)
                                                   f_sync (ff)
               CSTACK = 00000000 ( 00000004 )

    *************************************************************************

  FILE NAME : C:\Users\owner\Code\TAU project\GPS Tracker\Debug\Obj\ff.r43
  PROGRAM MODULE, NAME : ff

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 1104 - 1105 (0x2 bytes), align: 1
  Segment part 6.             Intra module refs:   chk_mounted
                                                   f_mount
           LOCAL                   ADDRESS         
           =====                   =======         
           FatFs                   1104 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1106 - 1107 (0x2 bytes), align: 1
  Segment part 7.             Intra module refs:   chk_mounted
           LOCAL                   ADDRESS         
           =====                   =======         
           Fsid                    1106 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6CA6 - 6CBB (0x16 bytes), align: 1
  Segment part 11.            Intra module refs:   dir_register
                                                   f_write
           LOCAL                   ADDRESS         
           =====                   =======         
           mem_cpy                 6CA6 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6D26 - 6D39 (0x14 bytes), align: 1
  Segment part 12.            Intra module refs:   create_name
                                                   dir_next
                                                   dir_register
                                                   sync
           LOCAL                   ADDRESS         
           =====                   =======         
           mem_set                 6D26 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6B6A - 6B8F (0x26 bytes), align: 1
  Segment part 24.            Intra module refs:   dir_find
           LOCAL                   ADDRESS         
           =====                   =======         
           mem_cmp                 6B6A 
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6C4A - 6C61 (0x18 bytes), align: 1
  Segment part 26.            Intra module refs:   create_name
           LOCAL                   ADDRESS         
           =====                   =======         
           chk_chr                 6C4A 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 5CF6 - 5DAD (0xb8 bytes), align: 1
  Segment part 14.            Intra module refs:   dir_find
                                                   dir_next
                                                   dir_register
                                                   f_open
                                                   f_sync
                                                   get_fat
                                                   put_fat
                                                   sync
           LOCAL                   ADDRESS         
           =====                   =======         
           move_window             5CF6 
               calls direct
               CSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 5A24 - 5B1B (0xf8 bytes), align: 1
  Segment part 15.            Intra module refs:   f_sync
           LOCAL                   ADDRESS         
           =====                   =======         
           sync                    5A24 
               calls direct
               CSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 681C - 685F (0x44 bytes), align: 1
  Segment part 16.            Intra module refs:   dir_next
                                                   dir_sdi
                                                   f_write
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clust2sect              681C 
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 4D44 - 4ED3 (0x190 bytes), align: 1
  Segment part 17.            Intra module refs:   create_chain
                                                   dir_next
                                                   dir_sdi
                                                   remove_chain
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_fat                 4D44 
               calls direct
               CSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 483E - 49FF (0x1c2 bytes), align: 1
  Segment part 20.            Intra module refs:   create_chain
                                                   remove_chain
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           put_fat                 483E 
               calls direct
               CSTACK = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 5FBA - 6055 (0x9c bytes), align: 1
  Segment part 34.            Intra module refs:   f_open
           LOCAL                   ADDRESS         
           =====                   =======         
           remove_chain            5FBA 
               calls direct
               CSTACK = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 56E0 - 5803 (0x124 bytes), align: 1
  Segment part 21.            Intra module refs:   dir_next
                                                   f_write
           LOCAL                   ADDRESS         
           =====                   =======         
           create_chain            56E0 
               calls direct
               CSTACK = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 591E - 5A23 (0x106 bytes), align: 1
  Segment part 18.            Intra module refs:   dir_find
                                                   dir_register
                                                   follow_path
           LOCAL                   ADDRESS         
           =====                   =======         
           dir_sdi                 591E 
               calls direct
               CSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 4ED4 - 5063 (0x190 bytes), align: 1
  Segment part 22.            Intra module refs:   dir_find
                                                   dir_register
           LOCAL                   ADDRESS         
           =====                   =======         
           dir_next                4ED4 
               calls direct
               CSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 637C - 63DD (0x62 bytes), align: 1
  Segment part 25.            Intra module refs:   follow_path
           LOCAL                   ADDRESS         
           =====                   =======         
           dir_find                637C 
               calls direct
               CSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6180 - 6205 (0x86 bytes), align: 1
  Segment part 23.            Intra module refs:   f_open
           LOCAL                   ADDRESS         
           =====                   =======         
           dir_register            6180 
               calls direct
               CSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 5804 - 591D (0x11a bytes), align: 1
  Segment part 27.            Intra module refs:   follow_path
           LOCAL                   ADDRESS         
           =====                   =======         
           create_name             5804 
               calls direct
               CSTACK = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 31A8 - 31B6 (0xf bytes), align: 0
  Segment part 2.             Intra module refs:   create_name
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 31B7 - 3236 (0x80 bytes), align: 0
  Segment part 8.             Intra module refs:   create_name
           LOCAL                   ADDRESS         
           =====                   =======         
           create_name::excvt      31B7 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 5DAE - 5E61 (0xb4 bytes), align: 1
  Segment part 28.            Intra module refs:   f_open
           LOCAL                   ADDRESS         
           =====                   =======         
           follow_path             5DAE 
               calls direct
               CSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6056 - 60ED (0x98 bytes), align: 1
  Segment part 29.            Intra module refs:   chk_mounted
           LOCAL                   ADDRESS         
           =====                   =======         
           check_fs                6056 
               calls direct
               CSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 3900 - 3EA3 (0x5a4 bytes), align: 1
  Segment part 30.            Intra module refs:   f_open
           LOCAL                   ADDRESS         
           =====                   =======         
           chk_mounted             3900 
               calls direct
               CSTACK = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6ABC - 6AE7 (0x2c bytes), align: 1
  Segment part 38.            Intra module refs:   f_sync
                                                   f_write
           LOCAL                   ADDRESS         
           =====                   =======         
           validate                6ABC 
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6A8E - 6ABB (0x2e bytes), align: 1
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           f_mount                 6A8E            main (main)
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 4622 - 483D (0x21c bytes), align: 1
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           f_open                  4622            main (main)
               calls direct
               CSTACK = 00000000 ( 00000038 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 3EA4 - 4179 (0x2d6 bytes), align: 1
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           f_write                 3EA4            main (main)
               calls direct
               CSTACK = 00000000 ( 00000016 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 5B1C - 5C09 (0xee bytes), align: 1
  Segment part 46.            Intra module refs:   f_close
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           f_sync                  5B1C 
               calls direct
               CSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6CD2 - 6CE7 (0x16 bytes), align: 1
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           f_close                 6CD2            main (main)
               calls direct
               CSTACK = 00000000 ( 00000006 )

    *************************************************************************

  FILE NAME : C:\Users\owner\Code\TAU project\GPS Tracker\Debug\Obj\gps.r43
  PROGRAM MODULE, NAME : gps

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 001D - 001D (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   gps_init
                                                   hw_setup (main)
                                                   led_setup (main)
                                                   main (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P4OUT                   001D 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 001E - 001E (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   gps_init
                                                   led_setup (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P4DIR                   001E 
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 3237 - 323D (0x7 bytes), align: 0
  Segment part 4.             Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 323E - 32F1 (0xb4 bytes), align: 0
  Segment part 5.             Intra module refs:   gps_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gpsInitStrs             323E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6300 - 637B (0x7c bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gps_init                6300            main (main)
               calls direct
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 1100 - 1101 (0x2 bytes), align: 1
  Segment part 6.             Intra module refs:   parse_line
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gps_line_header         1100 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 5064 - 51D7 (0x174 bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parse_line              5064            main (main)
               calls direct
               CSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 5F14 - 5FB9 (0xa6 bytes), align: 1
  Segment part 10.            Intra module refs:   parse_line
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parse_time              5F14 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 4A00 - 4BA5 (0x1a6 bytes), align: 1
  Segment part 9.             Intra module refs:   parse_line
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parse_coord             4A00 
               calls direct
               CSTACK = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 5E62 - 5F13 (0xb2 bytes), align: 1
  Segment part 8.             Intra module refs:   parse_line
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parse_date              5E62 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 3320 - 3321 (0x2 bytes), align: 1
  Segment part 7.             Intra module refs:   gps_line_header

    *************************************************************************

  FILE NAME : C:\Users\owner\Code\TAU project\GPS Tracker\Debug\Obj\main.r43
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0056 - 0056 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   clocks_setup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DCOCTL                  0056 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0057 - 0057 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   clocks_setup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BCSCTL1                 0057 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0058 - 0058 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   clocks_setup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BCSCTL2                 0058 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0053 - 0053 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   clocks_setup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BCSCTL3                 0053 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0120 - 0121 (0x2 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDTCTL                  0120 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 155E - 15DD (0x80 bytes), align: 0
  Segment part 11.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           line                    155E 
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 32F2 - 32F9 (0x8 bytes), align: 0
  Segment part 9.             Intra module refs:   main
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 32FA - 3306 (0xd bytes), align: 0
  Segment part 10.            Intra module refs:   spool_coords
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1108 - 1327 (0x220 bytes), align: 1
  Segment part 15.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Fil                     1108 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1328 - 1555 (0x22e bytes), align: 1
  Segment part 17.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Fatfs                   1328 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 15DE - 15DE (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           result                  15DE 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 5C0A - 5CF5 (0xec bytes), align: 1
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    5C0A            Segment part 19 (?cstart)
               calls direct
               CSTACK = 00000000 ( 00000026 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6C62 - 6C79 (0x18 bytes), align: 1
  Segment part 23.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hw_setup                6C62 
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6E5A - 6E63 (0xa bytes), align: 1
  Segment part 22.            Intra module refs:   hw_setup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_setup               6E5A 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 69CE - 69FF (0x32 bytes), align: 1
  Segment part 21.            Intra module refs:   hw_setup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clocks_setup            69CE 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6E94 - 6E95 (0x2 bytes), align: 1
  Segment part 20.            Intra module refs:   hw_setup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timers_setup            6E94 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6C32 - 6C49 (0x18 bytes), align: 1
  Segment part 19.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spool_coords            6C32 
               calls direct
               CSTACK = 00000000 ( 0000000C )

    *************************************************************************

  FILE NAME : C:\Users\owner\Code\TAU project\GPS Tracker\Debug\Obj\mmc.r43
  PROGRAM MODULE, NAME : mmc

  SEGMENTS IN THE MODULE
  ======================
DATA16_I
  Relative segment, address: 1102 - 1102 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   mmcCheckBusy
                                                   mmcGetResponse
                                                   mmcGetXXResponse
                                                   mmcGoIdle
                                                   mmcInit
                                                   mmcReadBlock
                                                   mmcSetBlockLength
                                                   mmcWriteBlock
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DUMMY_CHAR              1102 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6B90 - 6BB1 (0x22 bytes), align: 1
  Segment part 12.            Intra module refs:   mmcSetBlockLength
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mmcInit                 6B90            disk_initialize (diskio)
               calls direct
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 643C - 6499 (0x5e bytes), align: 1
  Segment part 11.            Intra module refs:   mmcInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mmcGoIdle               643C 
               calls direct
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6BB2 - 6BD3 (0x22 bytes), align: 1
  Segment part 7.             Intra module refs:   mmcGoIdle
                                                   mmcReadBlock
                                                   mmcSetBlockLength
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mmcGetResponse          6BB2 
               calls direct
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6BF6 - 6C15 (0x20 bytes), align: 1
  Segment part 9.             Intra module refs:   mmcReadBlock
                                                   mmcWriteBlock
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mmcGetXXResponse        6BF6 
               calls direct
               CSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 654E - 65A5 (0x58 bytes), align: 1
  Segment part 15.            Intra module refs:   mmcWriteBlock
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mmcCheckBusy            654E 
               calls direct
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6284 - 62FF (0x7c bytes), align: 1
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mmcReadBlock            6284            disk_read (diskio)
               calls direct
               CSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6206 - 6283 (0x7e bytes), align: 1
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mmcWriteBlock           6206            disk_write (diskio)
               calls direct
               CSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 66F0 - 673B (0x4c bytes), align: 1
  Segment part 10.            Intra module refs:   mmcGoIdle
                                                   mmcReadBlock
                                                   mmcSetBlockLength
                                                   mmcWriteBlock
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mmcSendCmd              66F0 
               calls direct
               CSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 67D4 - 681B (0x48 bytes), align: 1
  Segment part 13.            Intra module refs:   mmcReadBlock
                                                   mmcWriteBlock
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mmcSetBlockLength       67D4 
               calls direct
               CSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 3322 - 3322 (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   DUMMY_CHAR

    *************************************************************************

  FILE NAME : C:\Users\owner\Code\TAU project\GPS Tracker\Debug\Obj\sd_spi.r43
  PROGRAM MODULE, NAME : sd_spi

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0003 - 0003 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   sd_spi_read
                                                   sd_spi_write
                                                   sd_spi_write_byte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IFG2                    0003 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 001B - 001B (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   sd_spi_init
                                                   uart_init (uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P3SEL                   001B 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0068 - 0068 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   sd_spi_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCB0CTL0                0068 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0069 - 0069 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   sd_spi_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCB0CTL1                0069 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 006A - 006A (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   sd_spi_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCB0BR0                 006A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 006B - 006B (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   sd_spi_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCB0BR1                 006B 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 006E - 006E (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   sd_spi_read
                                                   sd_spi_write
                                                   sd_spi_write_byte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCB0RXBUF               006E 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 006F - 006F (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   sd_spi_read
                                                   sd_spi_write
                                                   sd_spi_write_byte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCB0TXBUF               006F 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6A00 - 6A2F (0x30 bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sd_spi_init             6A00            sd_hw_init (diskio)
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6B14 - 6B3F (0x2c bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sd_spi_write            6B14            mmcSendCmd (mmc)
                                                   mmcWriteBlock (mmc)
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6C7A - 6C8F (0x16 bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sd_spi_write_byte       6C7A            mmcCheckBusy (mmc)
                                                   mmcGetResponse (mmc)
                                                   mmcGetXXResponse (mmc)
                                                   mmcGoIdle (mmc)
                                                   mmcInit (mmc)
                                                   mmcReadBlock (mmc)
                                                   mmcSetBlockLength (mmc)
                                                   mmcWriteBlock (mmc)
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6A60 - 6A8D (0x2e bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sd_spi_read             6A60            mmcReadBlock (mmc)
               CSTACK = 00000000 ( 00000006 )

    *************************************************************************

  FILE NAME : C:\Users\owner\Code\TAU project\GPS Tracker\Debug\Obj\timer.r43
  PROGRAM MODULE, NAME : timer

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6924 - 6961 (0x3e bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           wait                    6924            gps_init (gps)
               CSTACK = 00000000 ( 0000000A )

    *************************************************************************

  FILE NAME : C:\Users\owner\Code\TAU project\GPS Tracker\Debug\Obj\uart.r43
  PROGRAM MODULE, NAME : uart

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0006 - 0006 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   uart_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UC1IE                   0006 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0007 - 0007 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   uartTxISR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UC1IFG                  0007 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 00D0 - 00D0 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   uart_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1CTL0                00D0 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 00D1 - 00D1 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   uart_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1CTL1                00D1 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 00D2 - 00D2 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   uart_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1BR0                 00D2 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 00D3 - 00D3 (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   uart_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1BR1                 00D3 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 00D4 - 00D4 (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   uart_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1MCTL                00D4 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 00D5 - 00D5 (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   uartRxISR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1STAT                00D5 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 00D6 - 00D6 (0x1 bytes), align: 0
  Segment part 11. ROOT.      Intra module refs:   uartRxISR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1RXBUF               00D6 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 00D7 - 00D7 (0x1 bytes), align: 0
  Segment part 12. ROOT.      Intra module refs:   uartTxISR
                                                   uart_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1TXBUF               00D7 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 15DF - 165E (0x80 bytes), align: 0
  Segment part 16.            Intra module refs:   uartTxISR
                                                   uart_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uartTxBuf               15DF 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 165F - 175E (0x100 bytes), align: 0
  Segment part 17.            Intra module refs:   uartRxISR
                                                   uart_read
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uartRxBuf               165F 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1556 - 1557 (0x2 bytes), align: 1
  Segment part 18.            Intra module refs:   uartRxISR
                                                   uart_init
                                                   uart_read
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uartRxNextIn            1556 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1558 - 1559 (0x2 bytes), align: 1
  Segment part 19.            Intra module refs:   uartRxISR
                                                   uart_init
                                                   uart_read
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uartRxNextOut           1558 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 175F - 175F (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   uartRxISR
                                                   uart_init
                                                   uart_read
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bUartRxValid            175F 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 155A - 155B (0x2 bytes), align: 1
  Segment part 21.            Intra module refs:   uartTxISR
                                                   uart_init
                                                   uart_send
                                                   uart_send_available
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uartTxNextIn            155A 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 155C - 155D (0x2 bytes), align: 1
  Segment part 22.            Intra module refs:   uartTxISR
                                                   uart_init
                                                   uart_send
                                                   uart_send_available
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uartTxNextOut           155C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1760 - 1760 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   uartTxISR
                                                   uart_init
                                                   uart_is_tx_clear
                                                   uart_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bUartTxClear            1760 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6E6C - 6E73 (0x8 bytes), align: 1
  Segment part 30.            Intra module refs:   uart_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uart_enable             6E6C 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 66A0 - 66EF (0x50 bytes), align: 1
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uart_init               66A0            main (main)
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 649A - 64F3 (0x5a bytes), align: 1
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uart_send               649A            gps_init (gps)
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 65A6 - 65F9 (0x54 bytes), align: 1
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uart_read               65A6            gps_init (gps)
                                                   main (main)
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6DCC - 6DDD (0x12 bytes), align: 1
  Segment part 27.            Intra module refs:   uart_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uart_send_available     6DCC 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6E74 - 6E79 (0x6 bytes), align: 1
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uart_is_tx_clear        6E74            gps_init (gps)
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 3128 - 315B (0x34 bytes), align: 1
  Segment part 25.            Intra module refs:   uartTxISR::??INTVEC 32
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uartTxISR               3128 
               interrupt function
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 315C - 31A7 (0x4c bytes), align: 1
  Segment part 24.            Intra module refs:   uartRxISR::??INTVEC 34
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uartRxISR               315C 
               interrupt function
               CSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FFC0 - FFE1 (0x22 bytes), align: 1
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uartTxISR::??INTVEC 32
                                   FFE0 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FFC0 - FFE3 (0x24 bytes), align: 1
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uartRxISR::??INTVEC 34
                                   FFE2 

    *************************************************************************

  FILE NAME : C:\Program Files\IAR Systems\Embedded Workbench 6.0_0\430\LIB\DLIB\dl430xsfn.r43
  LIBRARY MODULE, NAME : ?Mul32fHw

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 547E - 55AF (0x132 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Mul32fHw               547E            _LdtobLarge (?xprintflarge)
                                                   parse_coord (gps)
                                                   scale (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__dbg_break

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6E92 - 6E93 (0x2 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __DebugBreak            6E92            __exit (?__exit)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6CBC - 6CD1 (0x16 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  6CBC            Segment part 5 (?_exit)
                                                   _exit (?_exit)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?_exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6E7E, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _exit                   6E7E            exit (?exit)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6E7E - 6E81 (0x4 bytes), align: 1
  Segment part 5.             Intra module refs:   _exit

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cstart

  SEGMENTS IN THE MODULE
  ======================
CSTACK
  Relative segment, address: 2D00, align: 1
  Segment part 1.
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 155E, align: 1
  Segment part 2.
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 1102, align: 1
  Segment part 3.
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 3322, align: 1
  Segment part 4.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 3100 - 3103 (0x4 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         3100            ?reset_vector (?reset_vector)
                                                   Absolute parts (?ABS_ENTRY_MOD)
           ?cstart_begin           3100 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 3104 - 310F (0xc bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_zero       3104            FatFs (ff)
                                                   Fatfs (main)
                                                   Fil (main)
                                                   Fsid (ff)
                                                   bUartRxValid (uart)
                                                   bUartTxClear (uart)
                                                   line (main)
                                                   result (main)
                                                   uartRxBuf (uart)
                                                   uartRxNextIn (uart)
                                                   uartRxNextOut (uart)
                                                   uartTxBuf (uart)
                                                   uartTxNextIn (uart)
                                                   uartTxNextOut (uart)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 3110 - 311F (0x10 bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_copy       3110            DUMMY_CHAR (mmc)
                                                   gps_line_header (gps)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 3120 - 3127 (0x8 bytes), align: 1
  Segment part 19.            Intra module refs:   Segment part 10
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_main       3120 
           ?cstart_end             3128 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?reset_vector

  SEGMENTS IN THE MODULE
  ======================
RESET
  Relative segment, address: FFFE - FFFF (0x2 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?reset_vector           FFFE            Segment part 10 (?cstart)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?div64i

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 533A - 53DD (0xa4 bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Div64u                 533A            _LitobLarge (?xprintflarge)
               CSTACK = 00000000 ( 0000001E )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 53DE - 53EB (0xe bytes), align: 1
  Segment part 6.             Intra module refs:   _Div64u
                                                   _Mod64u
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 53EC - 53FB (0x10 bytes), align: 1
  Segment part 7.             Intra module refs:   _Div64u
                                                   _Mod64u
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 53FC - 5415 (0x1a bytes), align: 1
  Segment part 8.             Intra module refs:   _Div64u
                                                   _Mod64u
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 5416 - 547D (0x68 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Mod64u                 5416            _LitobLarge (?xprintflarge)
               CSTACK = 00000000 ( 00000016 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?div

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6CE8 - 6CFD (0x16 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           div                     6CE8            _GenldLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6E7A - 6E7D (0x4 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    6E7A            Segment part 19 (?cstart)
               calls direct
               CSTACK = 00000000 ( 00000004 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Cast32f32i

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 60EE - 617F (0x92 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Cast32sto32f           60EE            parse_coord (gps)
           _Cast32uto32f           6102            _LdtobLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _Cast32fto32u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6E38 - 6E43 (0xc bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Cast32fto32u           6E38            _LdtobLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_Extract

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 673C - 6787 (0x4c bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_Extract            673C            _Cast32fto32u (_Cast32fto32u)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_LT

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 664E - 669F (0x52 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_LT                 664E            _CmpLt32f (_CmpLt32f)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _CmpLt32f

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6E50 - 6E59 (0xa bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _CmpLt32f               6E50            _LdtobLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _Div32f

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 55B0 - 56DF (0x130 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Div32f                 55B0            _LdtobLarge (?xprintflarge)
                                                   parse_coord (gps)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _Add32f

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 51D8 - 5339 (0x162 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Add32f                 51DC            parse_coord (gps)
           _Sub32f                 51D8            _LdtobLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6C16 - 6C31 (0x1c bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod8u               6C16 
           ?DivMod16u              6C1A            Segment part 0 (?DivMod816s)
                                                   chk_mounted (ff)
                                                   dir_next (ff)
                                                   dir_sdi (ff)
                                                   get_fat (ff)
                                                   put_fat (ff)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816s

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 699A - 69CD (0x34 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod8s               699A 
           ?DivMod16s              699E            div (?div)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod32u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6962 - 6999 (0x38 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod32u              6962            ?DivMod32s (?DivMod32s)
                                                   Segment part 16 (?xprintflarge)
                                                   chk_mounted (ff)
                                                   f_write (ff)
                                                   get_fat (ff)
                                                   put_fat (ff)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod32s

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 68E4 - 6923 (0x40 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod32s              68E4            _LdtobLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ShiftRight32u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 63DE - 641D (0x40 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight32u          63DE            mmcSendCmd (mmc)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 641E - 6421 (0x4 bytes), align: 1
  Segment part 1.             Intra module refs:   ?ShiftRight32u
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight32u_7        641E            get_fat (ff)
                                                   put_fat (ff)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6422 - 6425 (0x4 bytes), align: 1
  Segment part 2.             Intra module refs:   ?ShiftRight32u_7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight32u_6        6422 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6426 - 6429 (0x4 bytes), align: 1
  Segment part 3.             Intra module refs:   ?ShiftRight32u_6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight32u_5        6426 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 642A - 642D (0x4 bytes), align: 1
  Segment part 4.             Intra module refs:   ?ShiftRight32u_5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight32u_4        642A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 642E - 6431 (0x4 bytes), align: 1
  Segment part 5.             Intra module refs:   ?ShiftRight32u_4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight32u_3        642E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6432 - 643B (0xa bytes), align: 1
  Segment part 6.             Intra module refs:   ?ShiftRight32u_3
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight32u_2        6432 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ShiftRight32u_8n

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6DEE - 6DF1 (0x4 bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight32u_9        6DEE            chk_mounted (ff)
                                                   f_write (ff)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6DF2 - 6DFD (0xc bytes), align: 1
  Segment part 6.             Intra module refs:   ?ShiftRight32u_9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight32u_8        6DF2 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memchr

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6C90 - 6CA5 (0x16 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Memchr            6C90            _PrintfLarge (?xprintflarge)
               CSTACK = 00000000 ( 00000004 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memcpy

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6D72 - 6D83 (0x12 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy                  6D72            Segment part 13 (?xprintflarge)
                                                   _GenldLarge (?xprintflarge)
                                                   _LdtobLarge (?xprintflarge)
                                                   __data16_memcpy (?memzero)
               CSTACK = 00000000 ( 00000004 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memzero

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6D84 - 6D95 (0x12 bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memzero        6D84            ?cstart_init_zero (?cstart)
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6E8A - 6E8D (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memcpy         6E8A            ?cstart_init_copy (?cstart)
               calls direct
               CSTACK = 00000000 ( 00000004 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Mul32Hw

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6A30 - 6A5F (0x30 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Mul32Hw                6A30            _LdtobLarge (?xprintflarge)
                                                   chk_mounted (ff)
                                                   clust2sect (ff)
                                                   disk_read (diskio)
                                                   disk_write (diskio)
                                                   get_fat (ff)
                                                   put_fat (ff)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?IndCallR15

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6E86 - 6E89 (0x4 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?IndCallR15             6E86            _PutcharLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?sprintf

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 68A2 - 68E3 (0x42 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sprintf                 68A2            spool_coords (main)
               calls direct
               CSTACK = 00000000 ( 0000000C )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strchr

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6E0E - 6E1D (0x10 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Strchr            6E0E            _PrintfLarge (?xprintflarge)
               CSTACK = 00000000 ( 00000004 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strlen

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6D60 - 6D71 (0x12 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen                  6D60            _PrintfLarge (?xprintflarge)
               CSTACK = 00000000 ( 00000004 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xdunscal

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6788 - 67D3 (0x4c bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Dunscale          6788            _LdtobLarge (?xprintflarge)
               CSTACK = 00000000 ( 00000004 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xprintflarge

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 3324 - 3399 (0x76 bytes), align: 1
  Segment part 23.            Intra module refs:   _PrintfLarge
           LOCAL                   ADDRESS         
           =====                   =======         
           LoadInt                 3324 
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 339A - 33A3 (0xa bytes), align: 1
  Segment part 24.            Intra module refs:   LoadInt
                                                   _LdtobLarge
                                                   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 33A4 - 387F (0x4dc bytes), align: 1
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _PrintfLarge            33A4            sprintf (?sprintf)
               calls direct
               CSTACK = 00000000 ( 00000074 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 3880 - 3887 (0x8 bytes), align: 1
  Segment part 26.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 3888 - 3895 (0xe bytes), align: 1
  Segment part 27.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 3896 - 389B (0x6 bytes), align: 1
  Segment part 28.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 389C - 38A3 (0x8 bytes), align: 1
  Segment part 29.            Intra module refs:   Segment part 28
                                                   Segment part 30
                                                   Segment part 31
                                                   Segment part 32
                                                   Segment part 33
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 38A4 - 38AF (0xc bytes), align: 1
  Segment part 30.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 38B0 - 38BB (0xc bytes), align: 1
  Segment part 31.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 38BC - 38C7 (0xc bytes), align: 1
  Segment part 32.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 38C8 - 38D3 (0xc bytes), align: 1
  Segment part 33.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 38D4 - 38E1 (0xe bytes), align: 1
  Segment part 34.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 38E2 - 38EF (0xe bytes), align: 1
  Segment part 35.            Intra module refs:   _LitobLarge
                                                   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 38F0 - 38FF (0x10 bytes), align: 1
  Segment part 36.            Intra module refs:   LoadInt
                                                   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6AE8 - 6B13 (0x2c bytes), align: 1
  Segment part 22.            Intra module refs:   Segment part 26
           LOCAL                   ADDRESS         
           =====                   =======         
           pad                     6AE8 
               calls direct
               CSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 4BA6 - 4D43 (0x19e bytes), align: 1
  Segment part 17.            Intra module refs:   _PrintfLarge
           LOCAL                   ADDRESS         
           =====                   =======         
           _LitobLarge             4BA6 
               calls direct
               CSTACK = 00000000 ( 0000002A )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6E1E - 6E2B (0xe bytes), align: 1
  Segment part 18.            Intra module refs:   _LitobLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6DBA - 6DCB (0x12 bytes), align: 1
  Segment part 19.            Intra module refs:   _LitobLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6D3A - 6D4D (0x14 bytes), align: 1
  Segment part 20.            Intra module refs:   _LitobLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6D4E - 6D5F (0x12 bytes), align: 1
  Segment part 21.            Intra module refs:   _LitobLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6860 - 68A1 (0x42 bytes), align: 1
  Segment part 14.            Intra module refs:   _LdtobLarge
           LOCAL                   ADDRESS         
           =====                   =======         
           scale                   6860 
               calls direct
               CSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 43D0 - 4621 (0x252 bytes), align: 1
  Segment part 15.            Intra module refs:   _PrintfLarge
           LOCAL                   ADDRESS         
           =====                   =======         
           _LdtobLarge             43D0 
               calls direct
               CSTACK = 00000000 ( 0000004A )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6DA8 - 6DB9 (0x12 bytes), align: 1
  Segment part 16.            Intra module refs:   _LdtobLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 417A - 43CF (0x256 bytes), align: 1
  Segment part 10.            Intra module refs:   _LdtobLarge
           LOCAL                   ADDRESS         
           =====                   =======         
           _GenldLarge             417A 
               calls direct
               CSTACK = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6DFE - 6E0D (0x10 bytes), align: 1
  Segment part 11.            Intra module refs:   _GenldLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6DDE - 6DED (0x10 bytes), align: 1
  Segment part 12.            Intra module refs:   _GenldLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6D12 - 6D25 (0x14 bytes), align: 1
  Segment part 13.            Intra module refs:   _GenldLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6B40 - 6B69 (0x2a bytes), align: 1
  Segment part 8.             Intra module refs:   _PrintfLarge
                                                   _PutcharsLarge
           LOCAL                   ADDRESS         
           =====                   =======         
           _PutcharLarge           6B40 
               calls indirect
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6BD4 - 6BF5 (0x22 bytes), align: 1
  Segment part 9.             Intra module refs:   _PrintfLarge
                                                   pad
           LOCAL                   ADDRESS         
           =====                   =======         
           _PutcharsLarge          6BD4 
               calls direct
               CSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6D96 - 6DA7 (0x12 bytes), align: 1
  Segment part 37.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 3307 - 330D (0x7 bytes), align: 0
  Segment part 2.             Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 330E - 3311 (0x4 bytes), align: 0
  Segment part 3.             Intra module refs:   _LdtobLarge
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 3312 - 3315 (0x4 bytes), align: 0
  Segment part 4.             Intra module refs:   _LdtobLarge
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 3316 - 3319 (0x4 bytes), align: 0
  Segment part 5.             Intra module refs:   _LdtobLarge
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 331A - 331D (0x4 bytes), align: 0
  Segment part 6.             Intra module refs:   _LdtobLarge
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 331E - 331F (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   _GenldLarge

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xsprout

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6E44 - 6E4F (0xc bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _SProut                 6E44            sprintf (?sprintf)
               CSTACK = 00000000 ( 00000004 )




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module                CODE      DATA      CONST
------                ----      ----      -----
                     (Rel)  (Rel)  (Abs)  (Rel)
?Cast32f32i            146
?DivMod32s              64
?DivMod32u              56
?DivMod816s             52
?DivMod816u             28
?FLT_Extract            76
?FLT_LT                 82
?IndCallR15              4
?Mul32Hw                48
?Mul32fHw              306
?ShiftRight32u          94
?ShiftRight32u_8n       16
?__dbg_break             2
?__exit                 22
?_exit                   4
?cstart                 40
?div                    22
?div64i                324
?exit                    4
?memchr                 22
?memcpy                 18
?memzero                22
?reset_vector            2
?sprintf                66
?strchr                 16
?strlen                 18
?xdunscal               76
?xprintflarge        3 450                   25
?xsprout                12
_Add32f                354
_Cast32fto32u           12
_CmpLt32f               10
_Div32f                304
diskio                 222
  + shared                             2
ff                   6 470      4           143
gps                  1 262      2           189
  + shared                             2
main                   346  1 231      6     21
mmc                    680      1             1
sd_spi                 160             7
  + shared                             1
timer                   62
uart                   414    394     10
  + common              36
N/A (command line)          1 024
N/A (alignment)
----------          ------  -----     --    ---
Total:              15 388  2 656     28    379
  + common              36


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK
    | Stack used (prev) :  00000000
  01  uartTxISR
      | Stack used (prev) :  00000000
      | + function block  :  00000006
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000006


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK
    | Stack used (prev) :  00000006
  01  uartRxISR
      | Stack used (prev) :  00000006
      | + function block  :  0000000A
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000010


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000010
  01  __iar_Memchr
      | Stack used (prev) :  00000010
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000010
  01  memcpy
      | Stack used (prev) :  00000010
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000010
  01  __iar_Strchr
      | Stack used (prev) :  00000010
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000010
  01  strlen
      | Stack used (prev) :  00000010
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000010
  01  _SProut
      | Stack used (prev) :  00000010
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000014
  02    uart_read
        | Stack used (prev) :  00000014
        | + function block  :  00000006
  03      uart_enable
          | Stack used (prev) :  00000014
          | + function block  :  00000004
  02    uart_init
        | Stack used (prev) :  00000018
        | + function block  :  00000004
  06            _PutcharLarge
                | Stack used (prev) :  00000014
                | + function block  :  00000006
  05          _PutcharsLarge
              | Stack used (prev) :  0000001A
              | + function block  :  0000000C
  05          _PutcharsLarge
              | Stack used (prev) :  0000001A
              | + function block  :  0000000C
              |  Already listed
  05          _PutcharsLarge
              | Stack used (prev) :  0000001A
              | + function block  :  0000000C
              |  Already listed
  05          _PutcharLarge
              | Stack used (prev) :  00000014
              | + function block  :  00000006
              |  Already listed
  07              memcpy
                  | Stack used (prev) :  00000010
                  | + function block  :  00000004
                  |  Already listed
  06            _GenldLarge
                | Stack used (prev) :  00000014
                | + function block  :  00000020
  06            scale
                | Stack used (prev) :  00000014
                | + function block  :  00000010
  06            scale
                | Stack used (prev) :  00000014
                | + function block  :  00000010
                |  Already listed
  06            __iar_Dunscale
                | Stack used (prev) :  00000014
                | + function block  :  00000004
  06            memcpy
                | Stack used (prev) :  00000010
                | + function block  :  00000004
                |  Already listed
  05          _LdtobLarge
              | Stack used (prev) :  00000034
              | + function block  :  0000004A
  06            _Mod64u
                | Stack used (prev) :  00000014
                | + function block  :  00000016
  06            _Div64u
                | Stack used (prev) :  00000014
                | + function block  :  0000001E
  05          _LitobLarge
              | Stack used (prev) :  00000032
              | + function block  :  0000002A
  05          _LitobLarge
              | Stack used (prev) :  00000032
              | + function block  :  0000002A
              |  Already listed
  06            _PutcharsLarge
                | Stack used (prev) :  0000001A
                | + function block  :  0000000C
                |  Already listed
  05          pad
              | Stack used (prev) :  00000026
              | + function block  :  0000000E
  05          pad
              | Stack used (prev) :  00000026
              | + function block  :  0000000E
              |  Already listed
  05          pad
              | Stack used (prev) :  00000026
              | + function block  :  0000000E
              |  Already listed
  05          pad
              | Stack used (prev) :  00000026
              | + function block  :  0000000E
              |  Already listed
  05          pad
              | Stack used (prev) :  00000026
              | + function block  :  0000000E
              |  Already listed
  05          LoadInt
              | Stack used (prev) :  00000014
              | + function block  :  00000004
  05          strlen
              | Stack used (prev) :  00000010
              | + function block  :  00000004
              |  Already listed
  05          __iar_Strchr
              | Stack used (prev) :  00000010
              | + function block  :  00000004
              |  Already listed
  05          __iar_Memchr
              | Stack used (prev) :  00000010
              | + function block  :  00000004
              |  Already listed
  04        _PrintfLarge
            | Stack used (prev) :  0000007E
            | + function block  :  00000074
  03      sprintf
          | Stack used (prev) :  000000F2
          | + function block  :  0000000C
  02    spool_coords
        | Stack used (prev) :  000000FE
        | + function block  :  0000000C
  03      timers_setup
          | Stack used (prev) :  00000014
          | + function block  :  00000004
  03      clocks_setup
          | Stack used (prev) :  00000014
          | + function block  :  00000004
  03      led_setup
          | Stack used (prev) :  00000014
          | + function block  :  00000004
  02    hw_setup
        | Stack used (prev) :  00000018
        | + function block  :  00000004
  03      parse_date
          | Stack used (prev) :  00000014
          | + function block  :  00000004
  03      parse_coord
          | Stack used (prev) :  00000014
          | + function block  :  00000018
  03      parse_coord
          | Stack used (prev) :  00000014
          | + function block  :  00000018
          |  Already listed
  03      parse_time
          | Stack used (prev) :  00000014
          | + function block  :  00000004
  02    parse_line
        | Stack used (prev) :  0000002C
        | + function block  :  0000000C
  03      uart_is_tx_clear
          | Stack used (prev) :  00000014
          | + function block  :  00000004
  03      uart_read
          | Stack used (prev) :  00000014
          | + function block  :  00000006
          |  Already listed
  04        uart_send_available
            | Stack used (prev) :  00000014
            | + function block  :  00000004
  03      uart_send
          | Stack used (prev) :  00000018
          | + function block  :  00000004
  03      wait
          | Stack used (prev) :  00000014
          | + function block  :  0000000A
  02    gps_init
        | Stack used (prev) :  0000001E
        | + function block  :  00000006
  05          disk_status
              | Stack used (prev) :  00000014
              | + function block  :  00000004
  04        validate
            | Stack used (prev) :  00000018
            | + function block  :  00000004
  08                sd_spi_write_byte
                    | Stack used (prev) :  00000014
                    | + function block  :  00000004
  08                sd_spi_write
                    | Stack used (prev) :  00000014
                    | + function block  :  00000004
  09                  sd_spi_write_byte
                      | Stack used (prev) :  00000014
                      | + function block  :  00000004
                      |  Already listed
  10                    sd_spi_write
                        | Stack used (prev) :  00000014
                        | + function block  :  00000004
                        |  Already listed
  09                  mmcSendCmd
                      | Stack used (prev) :  00000018
                      | + function block  :  00000012
  09                  mmcSendCmd
                      | Stack used (prev) :  00000018
                      | + function block  :  00000012
                      |  Already listed
  10                    sd_spi_write_byte
                        | Stack used (prev) :  00000014
                        | + function block  :  00000004
                        |  Already listed
  09                  mmcGetResponse
                      | Stack used (prev) :  00000018
                      | + function block  :  00000006
  09                  mmcGetResponse
                      | Stack used (prev) :  00000018
                      | + function block  :  00000006
                      |  Already listed
  10                    sd_spi_write_byte
                        | Stack used (prev) :  00000014
                        | + function block  :  00000004
                        |  Already listed
  11                      sd_spi_write_byte
                          | Stack used (prev) :  00000014
                          | + function block  :  00000004
                          |  Already listed
  11                      mmcSendCmd
                          | Stack used (prev) :  00000018
                          | + function block  :  00000012
                          |  Already listed
  11                      mmcSendCmd
                          | Stack used (prev) :  00000018
                          | + function block  :  00000012
                          |  Already listed
  11                      mmcGetResponse
                          | Stack used (prev) :  00000018
                          | + function block  :  00000006
                          |  Already listed
  11                      mmcGetResponse
                          | Stack used (prev) :  00000018
                          | + function block  :  00000006
                          |  Already listed
  10                    mmcGoIdle
                        | Stack used (prev) :  0000002A
                        | + function block  :  00000006
  09                  mmcInit
                      | Stack used (prev) :  00000030
                      | + function block  :  00000006
  08                mmcSetBlockLength
                    | Stack used (prev) :  00000036
                    | + function block  :  00000008
  08                mmcSendCmd
                    | Stack used (prev) :  00000018
                    | + function block  :  00000012
                    |  Already listed
  09                  sd_spi_write_byte
                      | Stack used (prev) :  00000014
                      | + function block  :  00000004
                      |  Already listed
  08                mmcCheckBusy
                    | Stack used (prev) :  00000018
                    | + function block  :  00000006
  09                  sd_spi_write_byte
                      | Stack used (prev) :  00000014
                      | + function block  :  00000004
                      |  Already listed
  08                mmcGetXXResponse
                    | Stack used (prev) :  00000018
                    | + function block  :  00000008
  07              mmcWriteBlock
                  | Stack used (prev) :  0000003E
                  | + function block  :  00000010
  06            disk_write
                | Stack used (prev) :  0000004E
                | + function block  :  00000012
  08                sd_spi_read
                    | Stack used (prev) :  00000014
                    | + function block  :  00000006
  08                sd_spi_write_byte
                    | Stack used (prev) :  00000014
                    | + function block  :  00000004
                    |  Already listed
  08                mmcSetBlockLength
                    | Stack used (prev) :  00000036
                    | + function block  :  00000008
                    |  Already listed
  08                mmcSendCmd
                    | Stack used (prev) :  00000018
                    | + function block  :  00000012
                    |  Already listed
  08                mmcGetXXResponse
                    | Stack used (prev) :  00000018
                    | + function block  :  00000008
                    |  Already listed
  08                mmcGetResponse
                    | Stack used (prev) :  00000018
                    | + function block  :  00000006
                    |  Already listed
  07              mmcReadBlock
                  | Stack used (prev) :  0000003E
                  | + function block  :  00000010
  06            disk_read
                | Stack used (prev) :  0000004E
                | + function block  :  00000012
  05          move_window
              | Stack used (prev) :  00000060
              | + function block  :  00000012
  05          mem_set
              | Stack used (prev) :  00000014
              | + function block  :  00000004
  05          disk_ioctl
              | Stack used (prev) :  00000014
              | + function block  :  00000004
  05          disk_write
              | Stack used (prev) :  0000004E
              | + function block  :  00000012
              |  Already listed
  04        sync
            | Stack used (prev) :  00000072
            | + function block  :  00000008
  04        move_window
            | Stack used (prev) :  00000060
            | + function block  :  00000012
            |  Already listed
  04        get_fattime
            | Stack used (prev) :  00000014
            | + function block  :  00000004
  04        disk_write
            | Stack used (prev) :  0000004E
            | + function block  :  00000012
            |  Already listed
  03      f_sync
          | Stack used (prev) :  0000007A
          | + function block  :  00000008
  02    f_close
        | Stack used (prev) :  00000082
        | + function block  :  00000006
  03      validate
          | Stack used (prev) :  00000018
          | + function block  :  00000004
          |  Already listed
  05          move_window
              | Stack used (prev) :  00000060
              | + function block  :  00000012
              |  Already listed
  05          move_window
              | Stack used (prev) :  00000060
              | + function block  :  00000012
              |  Already listed
  05          move_window
              | Stack used (prev) :  00000060
              | + function block  :  00000012
              |  Already listed
  05          move_window
              | Stack used (prev) :  00000060
              | + function block  :  00000012
              |  Already listed
  04        put_fat
            | Stack used (prev) :  00000072
            | + function block  :  00000014
  04        put_fat
            | Stack used (prev) :  00000072
            | + function block  :  00000014
            |  Already listed
  05          move_window
              | Stack used (prev) :  00000060
              | + function block  :  00000012
              |  Already listed
  05          move_window
              | Stack used (prev) :  00000060
              | + function block  :  00000012
              |  Already listed
  05          move_window
              | Stack used (prev) :  00000060
              | + function block  :  00000012
              |  Already listed
  05          move_window
              | Stack used (prev) :  00000060
              | + function block  :  00000012
              |  Already listed
  04        get_fat
            | Stack used (prev) :  00000072
            | + function block  :  00000010
  04        get_fat
            | Stack used (prev) :  00000072
            | + function block  :  00000010
            |  Already listed
  03      create_chain
          | Stack used (prev) :  00000086
          | + function block  :  00000018
  03      create_chain
          | Stack used (prev) :  00000086
          | + function block  :  00000018
          |  Already listed
  03      clust2sect
          | Stack used (prev) :  00000014
          | + function block  :  00000006
  03      mem_cpy
          | Stack used (prev) :  00000014
          | + function block  :  00000004
  03      mem_cpy
          | Stack used (prev) :  00000014
          | + function block  :  00000004
          |  Already listed
  03      disk_write
          | Stack used (prev) :  0000004E
          | + function block  :  00000012
          |  Already listed
  03      disk_read
          | Stack used (prev) :  0000004E
          | + function block  :  00000012
          |  Already listed
  02    f_write
        | Stack used (prev) :  0000009E
        | + function block  :  00000014
  05          disk_read
              | Stack used (prev) :  0000004E
              | + function block  :  00000012
              |  Already listed
  04        check_fs
            | Stack used (prev) :  00000060
            | + function block  :  00000008
  04        check_fs
            | Stack used (prev) :  00000060
            | + function block  :  00000008
            |  Already listed
  04        disk_read
            | Stack used (prev) :  0000004E
            | + function block  :  00000012
            |  Already listed
  04        disk_status
            | Stack used (prev) :  00000014
            | + function block  :  00000004
            |  Already listed
  05          mmcInit
              | Stack used (prev) :  00000030
              | + function block  :  00000006
              |  Already listed
  06            sd_spi_init
                | Stack used (prev) :  00000014
                | + function block  :  00000004
  05          sd_hw_init
              | Stack used (prev) :  00000018
              | + function block  :  00000004
  04        disk_initialize
            | Stack used (prev) :  00000036
            | + function block  :  00000004
  03      chk_mounted
          | Stack used (prev) :  00000068
          | + function block  :  00000016
  05          chk_chr
              | Stack used (prev) :  00000014
              | + function block  :  00000004
  05          mem_set
              | Stack used (prev) :  00000014
              | + function block  :  00000004
              |  Already listed
  04        create_name
            | Stack used (prev) :  00000018
            | + function block  :  00000014
  06            create_chain
                | Stack used (prev) :  00000086
                | + function block  :  00000018
                |  Already listed
  06            get_fat
                | Stack used (prev) :  00000072
                | + function block  :  00000010
                |  Already listed
  06            clust2sect
                | Stack used (prev) :  00000014
                | + function block  :  00000006
                |  Already listed
  06            clust2sect
                | Stack used (prev) :  00000014
                | + function block  :  00000006
                |  Already listed
  06            move_window
                | Stack used (prev) :  00000060
                | + function block  :  00000012
                |  Already listed
  06            move_window
                | Stack used (prev) :  00000060
                | + function block  :  00000012
                |  Already listed
  06            mem_set
                | Stack used (prev) :  00000014
                | + function block  :  00000004
                |  Already listed
  05          dir_next
              | Stack used (prev) :  0000009E
              | + function block  :  00000010
  06            get_fat
                | Stack used (prev) :  00000072
                | + function block  :  00000010
                |  Already listed
  06            clust2sect
                | Stack used (prev) :  00000014
                | + function block  :  00000006
                |  Already listed
  05          dir_sdi
              | Stack used (prev) :  00000082
              | + function block  :  0000000C
  05          move_window
              | Stack used (prev) :  00000060
              | + function block  :  00000012
              |  Already listed
  05          mem_cmp
              | Stack used (prev) :  00000014
              | + function block  :  00000006
  04        dir_find
            | Stack used (prev) :  000000AE
            | + function block  :  00000008
  04        dir_sdi
            | Stack used (prev) :  00000082
            | + function block  :  0000000C
            |  Already listed
  03      follow_path
          | Stack used (prev) :  000000B6
          | + function block  :  00000008
  04        dir_next
            | Stack used (prev) :  0000009E
            | + function block  :  00000010
            |  Already listed
  04        dir_sdi
            | Stack used (prev) :  00000082
            | + function block  :  0000000C
            |  Already listed
  04        move_window
            | Stack used (prev) :  00000060
            | + function block  :  00000012
            |  Already listed
  04        move_window
            | Stack used (prev) :  00000060
            | + function block  :  00000012
            |  Already listed
  04        mem_set
            | Stack used (prev) :  00000014
            | + function block  :  00000004
            |  Already listed
  04        mem_cpy
            | Stack used (prev) :  00000014
            | + function block  :  00000004
            |  Already listed
  03      dir_register
          | Stack used (prev) :  000000AE
          | + function block  :  0000000C
  04        put_fat
            | Stack used (prev) :  00000072
            | + function block  :  00000014
            |  Already listed
  04        get_fat
            | Stack used (prev) :  00000072
            | + function block  :  00000010
            |  Already listed
  03      remove_chain
          | Stack used (prev) :  00000086
          | + function block  :  00000014
  03      move_window
          | Stack used (prev) :  00000060
          | + function block  :  00000012
          |  Already listed
  03      get_fattime
          | Stack used (prev) :  00000014
          | + function block  :  00000004
          |  Already listed
  02    f_open
        | Stack used (prev) :  000000BE
        | + function block  :  00000038
  02    f_mount
        | Stack used (prev) :  00000014
        | + function block  :  00000004
  01  main
      | Stack used (prev) :  0000010A
      | + function block  :  00000026
  <-Sub-tree of type: Function tree
    | Stack used          :  00000130


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000130
  01  exit
      | Stack used (prev) :  00000130
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000134


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000134
  01  __data16_memzero
      | Stack used (prev) :  00000134
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000138


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000138
  02    memcpy
        | Stack used (prev) :  00000010
        | + function block  :  00000004
        |  Already listed
  01  __data16_memcpy
      | Stack used (prev) :  00000138
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000013C




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
DATA16_AN                              0003 - 0003               1   rel    0
                                       0006 - 0007               2 
                                       0019 - 001B               3 
                                       001D - 001E               2 
                                       0053 - 0053               1 
                                       0056 - 0058               3 
                                       0068 - 006B               4 
                                       006E - 006F               2 
                                       00D0 - 00D7               8 
                                       0120 - 0121               2 
DATA16_I                               1100 - 1102               3   rel    1
DATA16_Z                               1104 - 1760             65D   rel    1
CSTACK                                 2D00 - 30FF             400   rel    1
CSTART                                 3100 - 3127              28   rel    1
ISR_CODE                               3128 - 31A7              80   rel    1
DATA16_C                               31A8 - 331F             178   rel    0
DATA16_ID                              3320 - 3322               3   rel    1
<CODE> 1                               3324 - 6E95            3B72   rel    1
INTVEC                                 FFC0 - FFE3              24   com    1
RESET                                  FFFE - FFFF               2   rel    1

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 15 424 bytes of CODE  memory
  2 656 bytes of DATA  memory (+ 28 absolute )
    379 bytes of CONST memory

Errors: none
Warnings: none

